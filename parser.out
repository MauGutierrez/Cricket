Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID var_declaration function_declaration main_declaration POINT
Rule 2     var_declaration -> INT variable_ent_list var_declaration
Rule 3     var_declaration -> FLOAT variable_float_list var_declaration
Rule 4     var_declaration -> ARRINT variable_arrint_list var_declaration
Rule 5     var_declaration -> empty
Rule 6     variable_ent_list -> ID SEMMICOLON
Rule 7     variable_ent_list -> ID COMMA variable_ent_list
Rule 8     variable_ent_list -> ID ASSIGN NUMINT SEMMICOLON
Rule 9     variable_ent_list -> ID ASSIGN NUMINT COMMA variable_ent_list
Rule 10    variable_float_list -> ID SEMMICOLON
Rule 11    variable_float_list -> ID COMMA variable_float_list
Rule 12    variable_float_list -> ID ASSIGN NUMFLOAT SEMMICOLON
Rule 13    variable_float_list -> ID ASSIGN NUMFLOAT COMMA variable_float_list
Rule 14    variable_arrint_list -> ID LSQUARE ID RSQUARE SEMMICOLON
Rule 15    variable_arrint_list -> ID LSQUARE ID RSQUARE COMMA variable_arrint_list
Rule 16    variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE SEMMICOLON
Rule 17    variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE COMMA variable_arrint_list
Rule 18    function_declaration -> function_1
Rule 19    function_declaration -> empty
Rule 20    function_1 -> FUNCTION ID LPAREN RPAREN LKEY estatuto RKEY function_1
Rule 21    function_1 -> FUNCTION ID LPAREN RPAREN LKEY estatuto RKEY
Rule 22    main_declaration -> MAIN LPAREN RPAREN LKEY estatuto RKEY
Rule 23    estatuto -> ciclo_for estatuto
Rule 24    estatuto -> ciclo_if estatuto
Rule 25    estatuto -> ciclo_while estatuto
Rule 26    estatuto -> read_process estatuto
Rule 27    estatuto -> print_process estatuto
Rule 28    estatuto -> call_process estatuto
Rule 29    estatuto -> id_asignacion estatuto
Rule 30    estatuto -> empty
Rule 31    call_process -> CALL ID LPAREN RPAREN SEMMICOLON
Rule 32    print_process -> PRINT LPAREN print_1 RPAREN SEMMICOLON
Rule 33    print_1 -> id print_aux_1 print_prima_1
Rule 34    print_aux_1 -> <empty>
Rule 35    print_prima_1 -> COMMA print_prima_2 print_1
Rule 36    print_prima_1 -> empty print_prima_2
Rule 37    print_prima_2 -> <empty>
Rule 38    read_process -> READ LPAREN sexp RPAREN SEMMICOLON
Rule 39    id_asignacion -> id id_asignacion_prima
Rule 40    id_asignacion_prima -> ASSIGN sexp SEMMICOLON
Rule 41    id_asignacion_prima -> LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON
Rule 42    id_asignacion_prima -> LSQUARE expression RSQUARE LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON
Rule 43    ciclo_for -> FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY
Rule 44    ciclo_while -> WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2
Rule 45    ciclo_while_1 -> <empty>
Rule 46    ciclo_while_2 -> <empty>
Rule 47    ciclo_if -> IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else
Rule 48    ciclo_if_1 -> <empty>
Rule 49    if_else -> ELSE LKEY if_else_1 estatuto RKEY
Rule 50    if_else -> empty
Rule 51    if_else_1 -> <empty>
Rule 52    sexp -> cuadruplo_1 sexprima
Rule 53    cuadruplo_1 -> expression
Rule 54    sexprima -> AND push_operator sexp
Rule 55    sexprima -> OR push_operator sexp
Rule 56    sexprima -> empty
Rule 57    expression -> exp
Rule 58    expressionp -> LT push_operator exp
Rule 59    expressionp -> GT push_operator exp
Rule 60    expressionp -> LTEQ push_operator exp
Rule 61    expressionp -> GTEQ push_operator exp
Rule 62    expressionp -> EQ push_operator exp
Rule 63    expressionp -> NEQ push_operator exp
Rule 64    expressionp -> empty
Rule 65    exp -> cuadruplo_3 expp
Rule 66    cuadruplo_3 -> term
Rule 67    expp -> PLUS push_operator exp
Rule 68    expp -> MINUS push_operator exp
Rule 69    expp -> empty
Rule 70    term -> cuadruplo_4 termp
Rule 71    cuadruplo_4 -> factor
Rule 72    termp -> DIVISION push_operator term
Rule 73    termp -> TIMES push_operator term
Rule 74    termp -> empty
Rule 75    push_operator -> <empty>
Rule 76    factor -> cons
Rule 77    factor -> LPAREN expression RPAREN
Rule 78    cons -> id
Rule 79    cons -> NUMINT int_type
Rule 80    cons -> NUMFLOAT float_type
Rule 81    int_type -> <empty>
Rule 82    float_type -> <empty>
Rule 83    id -> ID idp
Rule 84    idp -> LSQUARE sexp RSQUARE
Rule 85    idp -> LPAREN idpp RPAREN
Rule 86    idp -> empty
Rule 87    idpp -> sexp idppaux
Rule 88    idpp -> empty
Rule 89    idppaux -> COMMA idpp
Rule 90    idppaux -> empty
Rule 91    empty -> <empty>

Terminals, with rules where they appear

AND                  : 54
ARRINT               : 4
ASSIGN               : 8 9 12 13 40 41 42 43 43
CALL                 : 31
COMMA                : 7 9 11 13 15 17 35 89
DIVISION             : 72
ELSE                 : 49
EQ                   : 62
FLOAT                : 3
FOR                  : 43
FUNCTION             : 20 21
GT                   : 59
GTEQ                 : 61
ID                   : 1 6 7 8 9 10 11 12 13 14 14 15 15 16 16 16 17 17 17 20 21 31 43 43 83
IF                   : 47
INT                  : 2
LKEY                 : 20 21 22 43 44 47 49
LPAREN               : 20 21 22 31 32 38 43 44 47 77 85
LSQUARE              : 14 15 16 16 17 17 41 42 42 84
LT                   : 58
LTEQ                 : 60
MAIN                 : 22
MINUS                : 68
NEQ                  : 63
NUMFLOAT             : 12 13 80
NUMINT               : 8 9 79
OR                   : 55
PLUS                 : 67
POINT                : 1
PRINT                : 32
PROGRAM              : 1
READ                 : 38
RKEY                 : 20 21 22 43 44 47 49
RPAREN               : 20 21 22 31 32 38 43 44 47 77 85
RSQUARE              : 14 15 16 16 17 17 41 42 42 84
SEMMICOLON           : 6 8 10 12 14 16 31 32 38 40 41 42 43 43
TIMES                : 73
WHILE                : 44
error                : 

Nonterminals, with rules where they appear

call_process         : 28
ciclo_for            : 23
ciclo_if             : 24
ciclo_if_1           : 47
ciclo_while          : 25
ciclo_while_1        : 44
ciclo_while_2        : 44
cons                 : 76
cuadruplo_1          : 52
cuadruplo_3          : 65
cuadruplo_4          : 70
empty                : 5 19 30 36 50 56 64 69 74 86 88 90
estatuto             : 20 21 22 23 24 25 26 27 28 29 43 44 47 49
exp                  : 57 58 59 60 61 62 63 67 68
expp                 : 65
expression           : 41 42 42 53 77
expressionp          : 
factor               : 71
float_type           : 80
function_1           : 18 20
function_declaration : 1
id                   : 33 39 78
id_asignacion        : 29
id_asignacion_prima  : 39
idp                  : 83
idpp                 : 85 89
idppaux              : 87
if_else              : 47
if_else_1            : 49
int_type             : 79
main_declaration     : 1
print_1              : 32 35
print_aux_1          : 33
print_prima_1        : 33
print_prima_2        : 35 36
print_process        : 27
programa             : 0
push_operator        : 54 55 58 59 60 61 62 63 67 68 72 73
read_process         : 26
sexp                 : 38 40 41 42 43 43 43 44 47 54 55 84 87
sexprima             : 52
term                 : 66 72 73
termp                : 70
var_declaration      : 1 2 3 4
variable_arrint_list : 4 15 17
variable_ent_list    : 2 7 9
variable_float_list  : 3 11 13

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID var_declaration function_declaration main_declaration POINT

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID var_declaration function_declaration main_declaration POINT

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . var_declaration function_declaration main_declaration POINT
    (2) var_declaration -> . INT variable_ent_list var_declaration
    (3) var_declaration -> . FLOAT variable_float_list var_declaration
    (4) var_declaration -> . ARRINT variable_arrint_list var_declaration
    (5) var_declaration -> . empty
    (91) empty -> .

    INT             shift and go to state 5
    FLOAT           shift and go to state 6
    ARRINT          shift and go to state 4
    FUNCTION        reduce using rule 91 (empty -> .)
    MAIN            reduce using rule 91 (empty -> .)

    var_declaration                shift and go to state 7
    empty                          shift and go to state 8

state 4

    (4) var_declaration -> ARRINT . variable_arrint_list var_declaration
    (14) variable_arrint_list -> . ID LSQUARE ID RSQUARE SEMMICOLON
    (15) variable_arrint_list -> . ID LSQUARE ID RSQUARE COMMA variable_arrint_list
    (16) variable_arrint_list -> . ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE SEMMICOLON
    (17) variable_arrint_list -> . ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE COMMA variable_arrint_list

    ID              shift and go to state 10

    variable_arrint_list           shift and go to state 9

state 5

    (2) var_declaration -> INT . variable_ent_list var_declaration
    (6) variable_ent_list -> . ID SEMMICOLON
    (7) variable_ent_list -> . ID COMMA variable_ent_list
    (8) variable_ent_list -> . ID ASSIGN NUMINT SEMMICOLON
    (9) variable_ent_list -> . ID ASSIGN NUMINT COMMA variable_ent_list

    ID              shift and go to state 12

    variable_ent_list              shift and go to state 11

state 6

    (3) var_declaration -> FLOAT . variable_float_list var_declaration
    (10) variable_float_list -> . ID SEMMICOLON
    (11) variable_float_list -> . ID COMMA variable_float_list
    (12) variable_float_list -> . ID ASSIGN NUMFLOAT SEMMICOLON
    (13) variable_float_list -> . ID ASSIGN NUMFLOAT COMMA variable_float_list

    ID              shift and go to state 14

    variable_float_list            shift and go to state 13

state 7

    (1) programa -> PROGRAM ID var_declaration . function_declaration main_declaration POINT
    (18) function_declaration -> . function_1
    (19) function_declaration -> . empty
    (20) function_1 -> . FUNCTION ID LPAREN RPAREN LKEY estatuto RKEY function_1
    (21) function_1 -> . FUNCTION ID LPAREN RPAREN LKEY estatuto RKEY
    (91) empty -> .

    FUNCTION        shift and go to state 15
    MAIN            reduce using rule 91 (empty -> .)

    function_declaration           shift and go to state 16
    function_1                     shift and go to state 17
    empty                          shift and go to state 18

state 8

    (5) var_declaration -> empty .

    FUNCTION        reduce using rule 5 (var_declaration -> empty .)
    MAIN            reduce using rule 5 (var_declaration -> empty .)


state 9

    (4) var_declaration -> ARRINT variable_arrint_list . var_declaration
    (2) var_declaration -> . INT variable_ent_list var_declaration
    (3) var_declaration -> . FLOAT variable_float_list var_declaration
    (4) var_declaration -> . ARRINT variable_arrint_list var_declaration
    (5) var_declaration -> . empty
    (91) empty -> .

    INT             shift and go to state 5
    FLOAT           shift and go to state 6
    ARRINT          shift and go to state 4
    FUNCTION        reduce using rule 91 (empty -> .)
    MAIN            reduce using rule 91 (empty -> .)

    var_declaration                shift and go to state 19
    empty                          shift and go to state 8

state 10

    (14) variable_arrint_list -> ID . LSQUARE ID RSQUARE SEMMICOLON
    (15) variable_arrint_list -> ID . LSQUARE ID RSQUARE COMMA variable_arrint_list
    (16) variable_arrint_list -> ID . LSQUARE ID RSQUARE LSQUARE ID RSQUARE SEMMICOLON
    (17) variable_arrint_list -> ID . LSQUARE ID RSQUARE LSQUARE ID RSQUARE COMMA variable_arrint_list

    LSQUARE         shift and go to state 20


state 11

    (2) var_declaration -> INT variable_ent_list . var_declaration
    (2) var_declaration -> . INT variable_ent_list var_declaration
    (3) var_declaration -> . FLOAT variable_float_list var_declaration
    (4) var_declaration -> . ARRINT variable_arrint_list var_declaration
    (5) var_declaration -> . empty
    (91) empty -> .

    INT             shift and go to state 5
    FLOAT           shift and go to state 6
    ARRINT          shift and go to state 4
    FUNCTION        reduce using rule 91 (empty -> .)
    MAIN            reduce using rule 91 (empty -> .)

    var_declaration                shift and go to state 21
    empty                          shift and go to state 8

state 12

    (6) variable_ent_list -> ID . SEMMICOLON
    (7) variable_ent_list -> ID . COMMA variable_ent_list
    (8) variable_ent_list -> ID . ASSIGN NUMINT SEMMICOLON
    (9) variable_ent_list -> ID . ASSIGN NUMINT COMMA variable_ent_list

    SEMMICOLON      shift and go to state 23
    COMMA           shift and go to state 24
    ASSIGN          shift and go to state 22


state 13

    (3) var_declaration -> FLOAT variable_float_list . var_declaration
    (2) var_declaration -> . INT variable_ent_list var_declaration
    (3) var_declaration -> . FLOAT variable_float_list var_declaration
    (4) var_declaration -> . ARRINT variable_arrint_list var_declaration
    (5) var_declaration -> . empty
    (91) empty -> .

    INT             shift and go to state 5
    FLOAT           shift and go to state 6
    ARRINT          shift and go to state 4
    FUNCTION        reduce using rule 91 (empty -> .)
    MAIN            reduce using rule 91 (empty -> .)

    var_declaration                shift and go to state 25
    empty                          shift and go to state 8

state 14

    (10) variable_float_list -> ID . SEMMICOLON
    (11) variable_float_list -> ID . COMMA variable_float_list
    (12) variable_float_list -> ID . ASSIGN NUMFLOAT SEMMICOLON
    (13) variable_float_list -> ID . ASSIGN NUMFLOAT COMMA variable_float_list

    SEMMICOLON      shift and go to state 26
    COMMA           shift and go to state 27
    ASSIGN          shift and go to state 28


state 15

    (20) function_1 -> FUNCTION . ID LPAREN RPAREN LKEY estatuto RKEY function_1
    (21) function_1 -> FUNCTION . ID LPAREN RPAREN LKEY estatuto RKEY

    ID              shift and go to state 29


state 16

    (1) programa -> PROGRAM ID var_declaration function_declaration . main_declaration POINT
    (22) main_declaration -> . MAIN LPAREN RPAREN LKEY estatuto RKEY

    MAIN            shift and go to state 31

    main_declaration               shift and go to state 30

state 17

    (18) function_declaration -> function_1 .

    MAIN            reduce using rule 18 (function_declaration -> function_1 .)


state 18

    (19) function_declaration -> empty .

    MAIN            reduce using rule 19 (function_declaration -> empty .)


state 19

    (4) var_declaration -> ARRINT variable_arrint_list var_declaration .

    FUNCTION        reduce using rule 4 (var_declaration -> ARRINT variable_arrint_list var_declaration .)
    MAIN            reduce using rule 4 (var_declaration -> ARRINT variable_arrint_list var_declaration .)


state 20

    (14) variable_arrint_list -> ID LSQUARE . ID RSQUARE SEMMICOLON
    (15) variable_arrint_list -> ID LSQUARE . ID RSQUARE COMMA variable_arrint_list
    (16) variable_arrint_list -> ID LSQUARE . ID RSQUARE LSQUARE ID RSQUARE SEMMICOLON
    (17) variable_arrint_list -> ID LSQUARE . ID RSQUARE LSQUARE ID RSQUARE COMMA variable_arrint_list

    ID              shift and go to state 32


state 21

    (2) var_declaration -> INT variable_ent_list var_declaration .

    FUNCTION        reduce using rule 2 (var_declaration -> INT variable_ent_list var_declaration .)
    MAIN            reduce using rule 2 (var_declaration -> INT variable_ent_list var_declaration .)


state 22

    (8) variable_ent_list -> ID ASSIGN . NUMINT SEMMICOLON
    (9) variable_ent_list -> ID ASSIGN . NUMINT COMMA variable_ent_list

    NUMINT          shift and go to state 33


state 23

    (6) variable_ent_list -> ID SEMMICOLON .

    INT             reduce using rule 6 (variable_ent_list -> ID SEMMICOLON .)
    FLOAT           reduce using rule 6 (variable_ent_list -> ID SEMMICOLON .)
    ARRINT          reduce using rule 6 (variable_ent_list -> ID SEMMICOLON .)
    FUNCTION        reduce using rule 6 (variable_ent_list -> ID SEMMICOLON .)
    MAIN            reduce using rule 6 (variable_ent_list -> ID SEMMICOLON .)


state 24

    (7) variable_ent_list -> ID COMMA . variable_ent_list
    (6) variable_ent_list -> . ID SEMMICOLON
    (7) variable_ent_list -> . ID COMMA variable_ent_list
    (8) variable_ent_list -> . ID ASSIGN NUMINT SEMMICOLON
    (9) variable_ent_list -> . ID ASSIGN NUMINT COMMA variable_ent_list

    ID              shift and go to state 12

    variable_ent_list              shift and go to state 34

state 25

    (3) var_declaration -> FLOAT variable_float_list var_declaration .

    FUNCTION        reduce using rule 3 (var_declaration -> FLOAT variable_float_list var_declaration .)
    MAIN            reduce using rule 3 (var_declaration -> FLOAT variable_float_list var_declaration .)


state 26

    (10) variable_float_list -> ID SEMMICOLON .

    INT             reduce using rule 10 (variable_float_list -> ID SEMMICOLON .)
    FLOAT           reduce using rule 10 (variable_float_list -> ID SEMMICOLON .)
    ARRINT          reduce using rule 10 (variable_float_list -> ID SEMMICOLON .)
    FUNCTION        reduce using rule 10 (variable_float_list -> ID SEMMICOLON .)
    MAIN            reduce using rule 10 (variable_float_list -> ID SEMMICOLON .)


state 27

    (11) variable_float_list -> ID COMMA . variable_float_list
    (10) variable_float_list -> . ID SEMMICOLON
    (11) variable_float_list -> . ID COMMA variable_float_list
    (12) variable_float_list -> . ID ASSIGN NUMFLOAT SEMMICOLON
    (13) variable_float_list -> . ID ASSIGN NUMFLOAT COMMA variable_float_list

    ID              shift and go to state 14

    variable_float_list            shift and go to state 35

state 28

    (12) variable_float_list -> ID ASSIGN . NUMFLOAT SEMMICOLON
    (13) variable_float_list -> ID ASSIGN . NUMFLOAT COMMA variable_float_list

    NUMFLOAT        shift and go to state 36


state 29

    (20) function_1 -> FUNCTION ID . LPAREN RPAREN LKEY estatuto RKEY function_1
    (21) function_1 -> FUNCTION ID . LPAREN RPAREN LKEY estatuto RKEY

    LPAREN          shift and go to state 37


state 30

    (1) programa -> PROGRAM ID var_declaration function_declaration main_declaration . POINT

    POINT           shift and go to state 38


state 31

    (22) main_declaration -> MAIN . LPAREN RPAREN LKEY estatuto RKEY

    LPAREN          shift and go to state 39


state 32

    (14) variable_arrint_list -> ID LSQUARE ID . RSQUARE SEMMICOLON
    (15) variable_arrint_list -> ID LSQUARE ID . RSQUARE COMMA variable_arrint_list
    (16) variable_arrint_list -> ID LSQUARE ID . RSQUARE LSQUARE ID RSQUARE SEMMICOLON
    (17) variable_arrint_list -> ID LSQUARE ID . RSQUARE LSQUARE ID RSQUARE COMMA variable_arrint_list

    RSQUARE         shift and go to state 40


state 33

    (8) variable_ent_list -> ID ASSIGN NUMINT . SEMMICOLON
    (9) variable_ent_list -> ID ASSIGN NUMINT . COMMA variable_ent_list

    SEMMICOLON      shift and go to state 41
    COMMA           shift and go to state 42


state 34

    (7) variable_ent_list -> ID COMMA variable_ent_list .

    INT             reduce using rule 7 (variable_ent_list -> ID COMMA variable_ent_list .)
    FLOAT           reduce using rule 7 (variable_ent_list -> ID COMMA variable_ent_list .)
    ARRINT          reduce using rule 7 (variable_ent_list -> ID COMMA variable_ent_list .)
    FUNCTION        reduce using rule 7 (variable_ent_list -> ID COMMA variable_ent_list .)
    MAIN            reduce using rule 7 (variable_ent_list -> ID COMMA variable_ent_list .)


state 35

    (11) variable_float_list -> ID COMMA variable_float_list .

    INT             reduce using rule 11 (variable_float_list -> ID COMMA variable_float_list .)
    FLOAT           reduce using rule 11 (variable_float_list -> ID COMMA variable_float_list .)
    ARRINT          reduce using rule 11 (variable_float_list -> ID COMMA variable_float_list .)
    FUNCTION        reduce using rule 11 (variable_float_list -> ID COMMA variable_float_list .)
    MAIN            reduce using rule 11 (variable_float_list -> ID COMMA variable_float_list .)


state 36

    (12) variable_float_list -> ID ASSIGN NUMFLOAT . SEMMICOLON
    (13) variable_float_list -> ID ASSIGN NUMFLOAT . COMMA variable_float_list

    SEMMICOLON      shift and go to state 43
    COMMA           shift and go to state 44


state 37

    (20) function_1 -> FUNCTION ID LPAREN . RPAREN LKEY estatuto RKEY function_1
    (21) function_1 -> FUNCTION ID LPAREN . RPAREN LKEY estatuto RKEY

    RPAREN          shift and go to state 45


state 38

    (1) programa -> PROGRAM ID var_declaration function_declaration main_declaration POINT .

    $end            reduce using rule 1 (programa -> PROGRAM ID var_declaration function_declaration main_declaration POINT .)


state 39

    (22) main_declaration -> MAIN LPAREN . RPAREN LKEY estatuto RKEY

    RPAREN          shift and go to state 46


state 40

    (14) variable_arrint_list -> ID LSQUARE ID RSQUARE . SEMMICOLON
    (15) variable_arrint_list -> ID LSQUARE ID RSQUARE . COMMA variable_arrint_list
    (16) variable_arrint_list -> ID LSQUARE ID RSQUARE . LSQUARE ID RSQUARE SEMMICOLON
    (17) variable_arrint_list -> ID LSQUARE ID RSQUARE . LSQUARE ID RSQUARE COMMA variable_arrint_list

    SEMMICOLON      shift and go to state 47
    COMMA           shift and go to state 48
    LSQUARE         shift and go to state 49


state 41

    (8) variable_ent_list -> ID ASSIGN NUMINT SEMMICOLON .

    INT             reduce using rule 8 (variable_ent_list -> ID ASSIGN NUMINT SEMMICOLON .)
    FLOAT           reduce using rule 8 (variable_ent_list -> ID ASSIGN NUMINT SEMMICOLON .)
    ARRINT          reduce using rule 8 (variable_ent_list -> ID ASSIGN NUMINT SEMMICOLON .)
    FUNCTION        reduce using rule 8 (variable_ent_list -> ID ASSIGN NUMINT SEMMICOLON .)
    MAIN            reduce using rule 8 (variable_ent_list -> ID ASSIGN NUMINT SEMMICOLON .)


state 42

    (9) variable_ent_list -> ID ASSIGN NUMINT COMMA . variable_ent_list
    (6) variable_ent_list -> . ID SEMMICOLON
    (7) variable_ent_list -> . ID COMMA variable_ent_list
    (8) variable_ent_list -> . ID ASSIGN NUMINT SEMMICOLON
    (9) variable_ent_list -> . ID ASSIGN NUMINT COMMA variable_ent_list

    ID              shift and go to state 12

    variable_ent_list              shift and go to state 50

state 43

    (12) variable_float_list -> ID ASSIGN NUMFLOAT SEMMICOLON .

    INT             reduce using rule 12 (variable_float_list -> ID ASSIGN NUMFLOAT SEMMICOLON .)
    FLOAT           reduce using rule 12 (variable_float_list -> ID ASSIGN NUMFLOAT SEMMICOLON .)
    ARRINT          reduce using rule 12 (variable_float_list -> ID ASSIGN NUMFLOAT SEMMICOLON .)
    FUNCTION        reduce using rule 12 (variable_float_list -> ID ASSIGN NUMFLOAT SEMMICOLON .)
    MAIN            reduce using rule 12 (variable_float_list -> ID ASSIGN NUMFLOAT SEMMICOLON .)


state 44

    (13) variable_float_list -> ID ASSIGN NUMFLOAT COMMA . variable_float_list
    (10) variable_float_list -> . ID SEMMICOLON
    (11) variable_float_list -> . ID COMMA variable_float_list
    (12) variable_float_list -> . ID ASSIGN NUMFLOAT SEMMICOLON
    (13) variable_float_list -> . ID ASSIGN NUMFLOAT COMMA variable_float_list

    ID              shift and go to state 14

    variable_float_list            shift and go to state 51

state 45

    (20) function_1 -> FUNCTION ID LPAREN RPAREN . LKEY estatuto RKEY function_1
    (21) function_1 -> FUNCTION ID LPAREN RPAREN . LKEY estatuto RKEY

    LKEY            shift and go to state 52


state 46

    (22) main_declaration -> MAIN LPAREN RPAREN . LKEY estatuto RKEY

    LKEY            shift and go to state 53


state 47

    (14) variable_arrint_list -> ID LSQUARE ID RSQUARE SEMMICOLON .

    INT             reduce using rule 14 (variable_arrint_list -> ID LSQUARE ID RSQUARE SEMMICOLON .)
    FLOAT           reduce using rule 14 (variable_arrint_list -> ID LSQUARE ID RSQUARE SEMMICOLON .)
    ARRINT          reduce using rule 14 (variable_arrint_list -> ID LSQUARE ID RSQUARE SEMMICOLON .)
    FUNCTION        reduce using rule 14 (variable_arrint_list -> ID LSQUARE ID RSQUARE SEMMICOLON .)
    MAIN            reduce using rule 14 (variable_arrint_list -> ID LSQUARE ID RSQUARE SEMMICOLON .)


state 48

    (15) variable_arrint_list -> ID LSQUARE ID RSQUARE COMMA . variable_arrint_list
    (14) variable_arrint_list -> . ID LSQUARE ID RSQUARE SEMMICOLON
    (15) variable_arrint_list -> . ID LSQUARE ID RSQUARE COMMA variable_arrint_list
    (16) variable_arrint_list -> . ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE SEMMICOLON
    (17) variable_arrint_list -> . ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE COMMA variable_arrint_list

    ID              shift and go to state 10

    variable_arrint_list           shift and go to state 54

state 49

    (16) variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE . ID RSQUARE SEMMICOLON
    (17) variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE . ID RSQUARE COMMA variable_arrint_list

    ID              shift and go to state 55


state 50

    (9) variable_ent_list -> ID ASSIGN NUMINT COMMA variable_ent_list .

    INT             reduce using rule 9 (variable_ent_list -> ID ASSIGN NUMINT COMMA variable_ent_list .)
    FLOAT           reduce using rule 9 (variable_ent_list -> ID ASSIGN NUMINT COMMA variable_ent_list .)
    ARRINT          reduce using rule 9 (variable_ent_list -> ID ASSIGN NUMINT COMMA variable_ent_list .)
    FUNCTION        reduce using rule 9 (variable_ent_list -> ID ASSIGN NUMINT COMMA variable_ent_list .)
    MAIN            reduce using rule 9 (variable_ent_list -> ID ASSIGN NUMINT COMMA variable_ent_list .)


state 51

    (13) variable_float_list -> ID ASSIGN NUMFLOAT COMMA variable_float_list .

    INT             reduce using rule 13 (variable_float_list -> ID ASSIGN NUMFLOAT COMMA variable_float_list .)
    FLOAT           reduce using rule 13 (variable_float_list -> ID ASSIGN NUMFLOAT COMMA variable_float_list .)
    ARRINT          reduce using rule 13 (variable_float_list -> ID ASSIGN NUMFLOAT COMMA variable_float_list .)
    FUNCTION        reduce using rule 13 (variable_float_list -> ID ASSIGN NUMFLOAT COMMA variable_float_list .)
    MAIN            reduce using rule 13 (variable_float_list -> ID ASSIGN NUMFLOAT COMMA variable_float_list .)


state 52

    (20) function_1 -> FUNCTION ID LPAREN RPAREN LKEY . estatuto RKEY function_1
    (21) function_1 -> FUNCTION ID LPAREN RPAREN LKEY . estatuto RKEY
    (23) estatuto -> . ciclo_for estatuto
    (24) estatuto -> . ciclo_if estatuto
    (25) estatuto -> . ciclo_while estatuto
    (26) estatuto -> . read_process estatuto
    (27) estatuto -> . print_process estatuto
    (28) estatuto -> . call_process estatuto
    (29) estatuto -> . id_asignacion estatuto
    (30) estatuto -> . empty
    (43) ciclo_for -> . FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY
    (47) ciclo_if -> . IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else
    (44) ciclo_while -> . WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2
    (38) read_process -> . READ LPAREN sexp RPAREN SEMMICOLON
    (32) print_process -> . PRINT LPAREN print_1 RPAREN SEMMICOLON
    (31) call_process -> . CALL ID LPAREN RPAREN SEMMICOLON
    (39) id_asignacion -> . id id_asignacion_prima
    (91) empty -> .
    (83) id -> . ID idp

    FOR             shift and go to state 67
    IF              shift and go to state 71
    WHILE           shift and go to state 59
    READ            shift and go to state 63
    PRINT           shift and go to state 60
    CALL            shift and go to state 64
    RKEY            reduce using rule 91 (empty -> .)
    ID              shift and go to state 70

    ciclo_for                      shift and go to state 56
    read_process                   shift and go to state 57
    ciclo_while                    shift and go to state 58
    estatuto                       shift and go to state 62
    id                             shift and go to state 61
    ciclo_if                       shift and go to state 68
    print_process                  shift and go to state 69
    id_asignacion                  shift and go to state 65
    call_process                   shift and go to state 72
    empty                          shift and go to state 66

state 53

    (22) main_declaration -> MAIN LPAREN RPAREN LKEY . estatuto RKEY
    (23) estatuto -> . ciclo_for estatuto
    (24) estatuto -> . ciclo_if estatuto
    (25) estatuto -> . ciclo_while estatuto
    (26) estatuto -> . read_process estatuto
    (27) estatuto -> . print_process estatuto
    (28) estatuto -> . call_process estatuto
    (29) estatuto -> . id_asignacion estatuto
    (30) estatuto -> . empty
    (43) ciclo_for -> . FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY
    (47) ciclo_if -> . IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else
    (44) ciclo_while -> . WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2
    (38) read_process -> . READ LPAREN sexp RPAREN SEMMICOLON
    (32) print_process -> . PRINT LPAREN print_1 RPAREN SEMMICOLON
    (31) call_process -> . CALL ID LPAREN RPAREN SEMMICOLON
    (39) id_asignacion -> . id id_asignacion_prima
    (91) empty -> .
    (83) id -> . ID idp

    FOR             shift and go to state 67
    IF              shift and go to state 71
    WHILE           shift and go to state 59
    READ            shift and go to state 63
    PRINT           shift and go to state 60
    CALL            shift and go to state 64
    RKEY            reduce using rule 91 (empty -> .)
    ID              shift and go to state 70

    ciclo_for                      shift and go to state 56
    read_process                   shift and go to state 57
    ciclo_while                    shift and go to state 58
    estatuto                       shift and go to state 73
    id                             shift and go to state 61
    ciclo_if                       shift and go to state 68
    print_process                  shift and go to state 69
    id_asignacion                  shift and go to state 65
    call_process                   shift and go to state 72
    empty                          shift and go to state 66

state 54

    (15) variable_arrint_list -> ID LSQUARE ID RSQUARE COMMA variable_arrint_list .

    INT             reduce using rule 15 (variable_arrint_list -> ID LSQUARE ID RSQUARE COMMA variable_arrint_list .)
    FLOAT           reduce using rule 15 (variable_arrint_list -> ID LSQUARE ID RSQUARE COMMA variable_arrint_list .)
    ARRINT          reduce using rule 15 (variable_arrint_list -> ID LSQUARE ID RSQUARE COMMA variable_arrint_list .)
    FUNCTION        reduce using rule 15 (variable_arrint_list -> ID LSQUARE ID RSQUARE COMMA variable_arrint_list .)
    MAIN            reduce using rule 15 (variable_arrint_list -> ID LSQUARE ID RSQUARE COMMA variable_arrint_list .)


state 55

    (16) variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE ID . RSQUARE SEMMICOLON
    (17) variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE ID . RSQUARE COMMA variable_arrint_list

    RSQUARE         shift and go to state 74


state 56

    (23) estatuto -> ciclo_for . estatuto
    (23) estatuto -> . ciclo_for estatuto
    (24) estatuto -> . ciclo_if estatuto
    (25) estatuto -> . ciclo_while estatuto
    (26) estatuto -> . read_process estatuto
    (27) estatuto -> . print_process estatuto
    (28) estatuto -> . call_process estatuto
    (29) estatuto -> . id_asignacion estatuto
    (30) estatuto -> . empty
    (43) ciclo_for -> . FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY
    (47) ciclo_if -> . IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else
    (44) ciclo_while -> . WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2
    (38) read_process -> . READ LPAREN sexp RPAREN SEMMICOLON
    (32) print_process -> . PRINT LPAREN print_1 RPAREN SEMMICOLON
    (31) call_process -> . CALL ID LPAREN RPAREN SEMMICOLON
    (39) id_asignacion -> . id id_asignacion_prima
    (91) empty -> .
    (83) id -> . ID idp

    FOR             shift and go to state 67
    IF              shift and go to state 71
    WHILE           shift and go to state 59
    READ            shift and go to state 63
    PRINT           shift and go to state 60
    CALL            shift and go to state 64
    RKEY            reduce using rule 91 (empty -> .)
    ID              shift and go to state 70

    ciclo_for                      shift and go to state 56
    read_process                   shift and go to state 57
    ciclo_while                    shift and go to state 58
    estatuto                       shift and go to state 75
    id                             shift and go to state 61
    ciclo_if                       shift and go to state 68
    print_process                  shift and go to state 69
    id_asignacion                  shift and go to state 65
    call_process                   shift and go to state 72
    empty                          shift and go to state 66

state 57

    (26) estatuto -> read_process . estatuto
    (23) estatuto -> . ciclo_for estatuto
    (24) estatuto -> . ciclo_if estatuto
    (25) estatuto -> . ciclo_while estatuto
    (26) estatuto -> . read_process estatuto
    (27) estatuto -> . print_process estatuto
    (28) estatuto -> . call_process estatuto
    (29) estatuto -> . id_asignacion estatuto
    (30) estatuto -> . empty
    (43) ciclo_for -> . FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY
    (47) ciclo_if -> . IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else
    (44) ciclo_while -> . WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2
    (38) read_process -> . READ LPAREN sexp RPAREN SEMMICOLON
    (32) print_process -> . PRINT LPAREN print_1 RPAREN SEMMICOLON
    (31) call_process -> . CALL ID LPAREN RPAREN SEMMICOLON
    (39) id_asignacion -> . id id_asignacion_prima
    (91) empty -> .
    (83) id -> . ID idp

    FOR             shift and go to state 67
    IF              shift and go to state 71
    WHILE           shift and go to state 59
    READ            shift and go to state 63
    PRINT           shift and go to state 60
    CALL            shift and go to state 64
    RKEY            reduce using rule 91 (empty -> .)
    ID              shift and go to state 70

    ciclo_for                      shift and go to state 56
    read_process                   shift and go to state 57
    ciclo_while                    shift and go to state 58
    estatuto                       shift and go to state 76
    id                             shift and go to state 61
    ciclo_if                       shift and go to state 68
    print_process                  shift and go to state 69
    id_asignacion                  shift and go to state 65
    call_process                   shift and go to state 72
    empty                          shift and go to state 66

state 58

    (25) estatuto -> ciclo_while . estatuto
    (23) estatuto -> . ciclo_for estatuto
    (24) estatuto -> . ciclo_if estatuto
    (25) estatuto -> . ciclo_while estatuto
    (26) estatuto -> . read_process estatuto
    (27) estatuto -> . print_process estatuto
    (28) estatuto -> . call_process estatuto
    (29) estatuto -> . id_asignacion estatuto
    (30) estatuto -> . empty
    (43) ciclo_for -> . FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY
    (47) ciclo_if -> . IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else
    (44) ciclo_while -> . WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2
    (38) read_process -> . READ LPAREN sexp RPAREN SEMMICOLON
    (32) print_process -> . PRINT LPAREN print_1 RPAREN SEMMICOLON
    (31) call_process -> . CALL ID LPAREN RPAREN SEMMICOLON
    (39) id_asignacion -> . id id_asignacion_prima
    (91) empty -> .
    (83) id -> . ID idp

    FOR             shift and go to state 67
    IF              shift and go to state 71
    WHILE           shift and go to state 59
    READ            shift and go to state 63
    PRINT           shift and go to state 60
    CALL            shift and go to state 64
    RKEY            reduce using rule 91 (empty -> .)
    ID              shift and go to state 70

    ciclo_for                      shift and go to state 56
    read_process                   shift and go to state 57
    ciclo_while                    shift and go to state 58
    estatuto                       shift and go to state 77
    id                             shift and go to state 61
    ciclo_if                       shift and go to state 68
    print_process                  shift and go to state 69
    id_asignacion                  shift and go to state 65
    call_process                   shift and go to state 72
    empty                          shift and go to state 66

state 59

    (44) ciclo_while -> WHILE . ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2
    (45) ciclo_while_1 -> .

    LPAREN          reduce using rule 45 (ciclo_while_1 -> .)

    ciclo_while_1                  shift and go to state 78

state 60

    (32) print_process -> PRINT . LPAREN print_1 RPAREN SEMMICOLON

    LPAREN          shift and go to state 79


state 61

    (39) id_asignacion -> id . id_asignacion_prima
    (40) id_asignacion_prima -> . ASSIGN sexp SEMMICOLON
    (41) id_asignacion_prima -> . LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON
    (42) id_asignacion_prima -> . LSQUARE expression RSQUARE LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON

    ASSIGN          shift and go to state 80
    LSQUARE         shift and go to state 81

    id_asignacion_prima            shift and go to state 82

state 62

    (20) function_1 -> FUNCTION ID LPAREN RPAREN LKEY estatuto . RKEY function_1
    (21) function_1 -> FUNCTION ID LPAREN RPAREN LKEY estatuto . RKEY

    RKEY            shift and go to state 83


state 63

    (38) read_process -> READ . LPAREN sexp RPAREN SEMMICOLON

    LPAREN          shift and go to state 84


state 64

    (31) call_process -> CALL . ID LPAREN RPAREN SEMMICOLON

    ID              shift and go to state 85


state 65

    (29) estatuto -> id_asignacion . estatuto
    (23) estatuto -> . ciclo_for estatuto
    (24) estatuto -> . ciclo_if estatuto
    (25) estatuto -> . ciclo_while estatuto
    (26) estatuto -> . read_process estatuto
    (27) estatuto -> . print_process estatuto
    (28) estatuto -> . call_process estatuto
    (29) estatuto -> . id_asignacion estatuto
    (30) estatuto -> . empty
    (43) ciclo_for -> . FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY
    (47) ciclo_if -> . IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else
    (44) ciclo_while -> . WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2
    (38) read_process -> . READ LPAREN sexp RPAREN SEMMICOLON
    (32) print_process -> . PRINT LPAREN print_1 RPAREN SEMMICOLON
    (31) call_process -> . CALL ID LPAREN RPAREN SEMMICOLON
    (39) id_asignacion -> . id id_asignacion_prima
    (91) empty -> .
    (83) id -> . ID idp

    FOR             shift and go to state 67
    IF              shift and go to state 71
    WHILE           shift and go to state 59
    READ            shift and go to state 63
    PRINT           shift and go to state 60
    CALL            shift and go to state 64
    RKEY            reduce using rule 91 (empty -> .)
    ID              shift and go to state 70

    ciclo_for                      shift and go to state 56
    read_process                   shift and go to state 57
    ciclo_while                    shift and go to state 58
    estatuto                       shift and go to state 86
    id                             shift and go to state 61
    ciclo_if                       shift and go to state 68
    print_process                  shift and go to state 69
    id_asignacion                  shift and go to state 65
    call_process                   shift and go to state 72
    empty                          shift and go to state 66

state 66

    (30) estatuto -> empty .

    RKEY            reduce using rule 30 (estatuto -> empty .)


state 67

    (43) ciclo_for -> FOR . LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY

    LPAREN          shift and go to state 87


state 68

    (24) estatuto -> ciclo_if . estatuto
    (23) estatuto -> . ciclo_for estatuto
    (24) estatuto -> . ciclo_if estatuto
    (25) estatuto -> . ciclo_while estatuto
    (26) estatuto -> . read_process estatuto
    (27) estatuto -> . print_process estatuto
    (28) estatuto -> . call_process estatuto
    (29) estatuto -> . id_asignacion estatuto
    (30) estatuto -> . empty
    (43) ciclo_for -> . FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY
    (47) ciclo_if -> . IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else
    (44) ciclo_while -> . WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2
    (38) read_process -> . READ LPAREN sexp RPAREN SEMMICOLON
    (32) print_process -> . PRINT LPAREN print_1 RPAREN SEMMICOLON
    (31) call_process -> . CALL ID LPAREN RPAREN SEMMICOLON
    (39) id_asignacion -> . id id_asignacion_prima
    (91) empty -> .
    (83) id -> . ID idp

    FOR             shift and go to state 67
    IF              shift and go to state 71
    WHILE           shift and go to state 59
    READ            shift and go to state 63
    PRINT           shift and go to state 60
    CALL            shift and go to state 64
    RKEY            reduce using rule 91 (empty -> .)
    ID              shift and go to state 70

    ciclo_for                      shift and go to state 56
    read_process                   shift and go to state 57
    ciclo_while                    shift and go to state 58
    estatuto                       shift and go to state 88
    id                             shift and go to state 61
    ciclo_if                       shift and go to state 68
    print_process                  shift and go to state 69
    id_asignacion                  shift and go to state 65
    call_process                   shift and go to state 72
    empty                          shift and go to state 66

state 69

    (27) estatuto -> print_process . estatuto
    (23) estatuto -> . ciclo_for estatuto
    (24) estatuto -> . ciclo_if estatuto
    (25) estatuto -> . ciclo_while estatuto
    (26) estatuto -> . read_process estatuto
    (27) estatuto -> . print_process estatuto
    (28) estatuto -> . call_process estatuto
    (29) estatuto -> . id_asignacion estatuto
    (30) estatuto -> . empty
    (43) ciclo_for -> . FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY
    (47) ciclo_if -> . IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else
    (44) ciclo_while -> . WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2
    (38) read_process -> . READ LPAREN sexp RPAREN SEMMICOLON
    (32) print_process -> . PRINT LPAREN print_1 RPAREN SEMMICOLON
    (31) call_process -> . CALL ID LPAREN RPAREN SEMMICOLON
    (39) id_asignacion -> . id id_asignacion_prima
    (91) empty -> .
    (83) id -> . ID idp

    FOR             shift and go to state 67
    IF              shift and go to state 71
    WHILE           shift and go to state 59
    READ            shift and go to state 63
    PRINT           shift and go to state 60
    CALL            shift and go to state 64
    RKEY            reduce using rule 91 (empty -> .)
    ID              shift and go to state 70

    ciclo_for                      shift and go to state 56
    read_process                   shift and go to state 57
    ciclo_while                    shift and go to state 58
    estatuto                       shift and go to state 89
    id                             shift and go to state 61
    ciclo_if                       shift and go to state 68
    print_process                  shift and go to state 69
    id_asignacion                  shift and go to state 65
    call_process                   shift and go to state 72
    empty                          shift and go to state 66

state 70

    (83) id -> ID . idp
    (84) idp -> . LSQUARE sexp RSQUARE
    (85) idp -> . LPAREN idpp RPAREN
    (86) idp -> . empty
    (91) empty -> .

  ! shift/reduce conflict for LSQUARE resolved as shift
    LSQUARE         shift and go to state 92
    LPAREN          shift and go to state 90
    ASSIGN          reduce using rule 91 (empty -> .)
    COMMA           reduce using rule 91 (empty -> .)
    RPAREN          reduce using rule 91 (empty -> .)
    DIVISION        reduce using rule 91 (empty -> .)
    TIMES           reduce using rule 91 (empty -> .)
    PLUS            reduce using rule 91 (empty -> .)
    MINUS           reduce using rule 91 (empty -> .)
    AND             reduce using rule 91 (empty -> .)
    OR              reduce using rule 91 (empty -> .)
    SEMMICOLON      reduce using rule 91 (empty -> .)
    RSQUARE         reduce using rule 91 (empty -> .)

  ! LSQUARE         [ reduce using rule 91 (empty -> .) ]

    empty                          shift and go to state 93
    idp                            shift and go to state 91

state 71

    (47) ciclo_if -> IF . LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else

    LPAREN          shift and go to state 94


state 72

    (28) estatuto -> call_process . estatuto
    (23) estatuto -> . ciclo_for estatuto
    (24) estatuto -> . ciclo_if estatuto
    (25) estatuto -> . ciclo_while estatuto
    (26) estatuto -> . read_process estatuto
    (27) estatuto -> . print_process estatuto
    (28) estatuto -> . call_process estatuto
    (29) estatuto -> . id_asignacion estatuto
    (30) estatuto -> . empty
    (43) ciclo_for -> . FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY
    (47) ciclo_if -> . IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else
    (44) ciclo_while -> . WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2
    (38) read_process -> . READ LPAREN sexp RPAREN SEMMICOLON
    (32) print_process -> . PRINT LPAREN print_1 RPAREN SEMMICOLON
    (31) call_process -> . CALL ID LPAREN RPAREN SEMMICOLON
    (39) id_asignacion -> . id id_asignacion_prima
    (91) empty -> .
    (83) id -> . ID idp

    FOR             shift and go to state 67
    IF              shift and go to state 71
    WHILE           shift and go to state 59
    READ            shift and go to state 63
    PRINT           shift and go to state 60
    CALL            shift and go to state 64
    RKEY            reduce using rule 91 (empty -> .)
    ID              shift and go to state 70

    ciclo_for                      shift and go to state 56
    read_process                   shift and go to state 57
    ciclo_while                    shift and go to state 58
    estatuto                       shift and go to state 95
    id                             shift and go to state 61
    ciclo_if                       shift and go to state 68
    call_process                   shift and go to state 72
    id_asignacion                  shift and go to state 65
    print_process                  shift and go to state 69
    empty                          shift and go to state 66

state 73

    (22) main_declaration -> MAIN LPAREN RPAREN LKEY estatuto . RKEY

    RKEY            shift and go to state 96


state 74

    (16) variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE . SEMMICOLON
    (17) variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE . COMMA variable_arrint_list

    SEMMICOLON      shift and go to state 97
    COMMA           shift and go to state 98


state 75

    (23) estatuto -> ciclo_for estatuto .

    RKEY            reduce using rule 23 (estatuto -> ciclo_for estatuto .)


state 76

    (26) estatuto -> read_process estatuto .

    RKEY            reduce using rule 26 (estatuto -> read_process estatuto .)


state 77

    (25) estatuto -> ciclo_while estatuto .

    RKEY            reduce using rule 25 (estatuto -> ciclo_while estatuto .)


state 78

    (44) ciclo_while -> WHILE ciclo_while_1 . LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2

    LPAREN          shift and go to state 99


state 79

    (32) print_process -> PRINT LPAREN . print_1 RPAREN SEMMICOLON
    (33) print_1 -> . id print_aux_1 print_prima_1
    (83) id -> . ID idp

    ID              shift and go to state 70

    id                             shift and go to state 101
    print_1                        shift and go to state 100

state 80

    (40) id_asignacion_prima -> ASSIGN . sexp SEMMICOLON
    (52) sexp -> . cuadruplo_1 sexprima
    (53) cuadruplo_1 -> . expression
    (57) expression -> . exp
    (65) exp -> . cuadruplo_3 expp
    (66) cuadruplo_3 -> . term
    (70) term -> . cuadruplo_4 termp
    (71) cuadruplo_4 -> . factor
    (76) factor -> . cons
    (77) factor -> . LPAREN expression RPAREN
    (78) cons -> . id
    (79) cons -> . NUMINT int_type
    (80) cons -> . NUMFLOAT float_type
    (83) id -> . ID idp

    LPAREN          shift and go to state 111
    NUMINT          shift and go to state 104
    NUMFLOAT        shift and go to state 103
    ID              shift and go to state 70

    term                           shift and go to state 112
    cons                           shift and go to state 102
    cuadruplo_4                    shift and go to state 105
    cuadruplo_1                    shift and go to state 106
    cuadruplo_3                    shift and go to state 107
    sexp                           shift and go to state 110
    exp                            shift and go to state 113
    factor                         shift and go to state 109
    expression                     shift and go to state 114
    id                             shift and go to state 108

state 81

    (41) id_asignacion_prima -> LSQUARE . expression RSQUARE ASSIGN sexp SEMMICOLON
    (42) id_asignacion_prima -> LSQUARE . expression RSQUARE LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON
    (57) expression -> . exp
    (65) exp -> . cuadruplo_3 expp
    (66) cuadruplo_3 -> . term
    (70) term -> . cuadruplo_4 termp
    (71) cuadruplo_4 -> . factor
    (76) factor -> . cons
    (77) factor -> . LPAREN expression RPAREN
    (78) cons -> . id
    (79) cons -> . NUMINT int_type
    (80) cons -> . NUMFLOAT float_type
    (83) id -> . ID idp

    LPAREN          shift and go to state 111
    NUMINT          shift and go to state 104
    NUMFLOAT        shift and go to state 103
    ID              shift and go to state 70

    term                           shift and go to state 112
    cons                           shift and go to state 102
    cuadruplo_4                    shift and go to state 105
    cuadruplo_3                    shift and go to state 107
    exp                            shift and go to state 113
    factor                         shift and go to state 109
    expression                     shift and go to state 115
    id                             shift and go to state 108

state 82

    (39) id_asignacion -> id id_asignacion_prima .

    FOR             reduce using rule 39 (id_asignacion -> id id_asignacion_prima .)
    IF              reduce using rule 39 (id_asignacion -> id id_asignacion_prima .)
    WHILE           reduce using rule 39 (id_asignacion -> id id_asignacion_prima .)
    READ            reduce using rule 39 (id_asignacion -> id id_asignacion_prima .)
    PRINT           reduce using rule 39 (id_asignacion -> id id_asignacion_prima .)
    CALL            reduce using rule 39 (id_asignacion -> id id_asignacion_prima .)
    ID              reduce using rule 39 (id_asignacion -> id id_asignacion_prima .)
    RKEY            reduce using rule 39 (id_asignacion -> id id_asignacion_prima .)


state 83

    (20) function_1 -> FUNCTION ID LPAREN RPAREN LKEY estatuto RKEY . function_1
    (21) function_1 -> FUNCTION ID LPAREN RPAREN LKEY estatuto RKEY .
    (20) function_1 -> . FUNCTION ID LPAREN RPAREN LKEY estatuto RKEY function_1
    (21) function_1 -> . FUNCTION ID LPAREN RPAREN LKEY estatuto RKEY

    MAIN            reduce using rule 21 (function_1 -> FUNCTION ID LPAREN RPAREN LKEY estatuto RKEY .)
    FUNCTION        shift and go to state 15

    function_1                     shift and go to state 116

state 84

    (38) read_process -> READ LPAREN . sexp RPAREN SEMMICOLON
    (52) sexp -> . cuadruplo_1 sexprima
    (53) cuadruplo_1 -> . expression
    (57) expression -> . exp
    (65) exp -> . cuadruplo_3 expp
    (66) cuadruplo_3 -> . term
    (70) term -> . cuadruplo_4 termp
    (71) cuadruplo_4 -> . factor
    (76) factor -> . cons
    (77) factor -> . LPAREN expression RPAREN
    (78) cons -> . id
    (79) cons -> . NUMINT int_type
    (80) cons -> . NUMFLOAT float_type
    (83) id -> . ID idp

    LPAREN          shift and go to state 111
    NUMINT          shift and go to state 104
    NUMFLOAT        shift and go to state 103
    ID              shift and go to state 70

    term                           shift and go to state 112
    cons                           shift and go to state 102
    cuadruplo_4                    shift and go to state 105
    cuadruplo_1                    shift and go to state 106
    cuadruplo_3                    shift and go to state 107
    sexp                           shift and go to state 117
    exp                            shift and go to state 113
    factor                         shift and go to state 109
    expression                     shift and go to state 114
    id                             shift and go to state 108

state 85

    (31) call_process -> CALL ID . LPAREN RPAREN SEMMICOLON

    LPAREN          shift and go to state 118


state 86

    (29) estatuto -> id_asignacion estatuto .

    RKEY            reduce using rule 29 (estatuto -> id_asignacion estatuto .)


state 87

    (43) ciclo_for -> FOR LPAREN . ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY

    ID              shift and go to state 119


state 88

    (24) estatuto -> ciclo_if estatuto .

    RKEY            reduce using rule 24 (estatuto -> ciclo_if estatuto .)


state 89

    (27) estatuto -> print_process estatuto .

    RKEY            reduce using rule 27 (estatuto -> print_process estatuto .)


state 90

    (85) idp -> LPAREN . idpp RPAREN
    (87) idpp -> . sexp idppaux
    (88) idpp -> . empty
    (52) sexp -> . cuadruplo_1 sexprima
    (91) empty -> .
    (53) cuadruplo_1 -> . expression
    (57) expression -> . exp
    (65) exp -> . cuadruplo_3 expp
    (66) cuadruplo_3 -> . term
    (70) term -> . cuadruplo_4 termp
    (71) cuadruplo_4 -> . factor
    (76) factor -> . cons
    (77) factor -> . LPAREN expression RPAREN
    (78) cons -> . id
    (79) cons -> . NUMINT int_type
    (80) cons -> . NUMFLOAT float_type
    (83) id -> . ID idp

    RPAREN          reduce using rule 91 (empty -> .)
    LPAREN          shift and go to state 111
    NUMINT          shift and go to state 104
    NUMFLOAT        shift and go to state 103
    ID              shift and go to state 70

    term                           shift and go to state 112
    cons                           shift and go to state 102
    cuadruplo_4                    shift and go to state 105
    cuadruplo_1                    shift and go to state 106
    cuadruplo_3                    shift and go to state 107
    sexp                           shift and go to state 121
    idpp                           shift and go to state 122
    exp                            shift and go to state 113
    factor                         shift and go to state 109
    expression                     shift and go to state 114
    id                             shift and go to state 108
    empty                          shift and go to state 120

state 91

    (83) id -> ID idp .

    ASSIGN          reduce using rule 83 (id -> ID idp .)
    LSQUARE         reduce using rule 83 (id -> ID idp .)
    DIVISION        reduce using rule 83 (id -> ID idp .)
    TIMES           reduce using rule 83 (id -> ID idp .)
    PLUS            reduce using rule 83 (id -> ID idp .)
    MINUS           reduce using rule 83 (id -> ID idp .)
    AND             reduce using rule 83 (id -> ID idp .)
    OR              reduce using rule 83 (id -> ID idp .)
    RPAREN          reduce using rule 83 (id -> ID idp .)
    SEMMICOLON      reduce using rule 83 (id -> ID idp .)
    RSQUARE         reduce using rule 83 (id -> ID idp .)
    COMMA           reduce using rule 83 (id -> ID idp .)


state 92

    (84) idp -> LSQUARE . sexp RSQUARE
    (52) sexp -> . cuadruplo_1 sexprima
    (53) cuadruplo_1 -> . expression
    (57) expression -> . exp
    (65) exp -> . cuadruplo_3 expp
    (66) cuadruplo_3 -> . term
    (70) term -> . cuadruplo_4 termp
    (71) cuadruplo_4 -> . factor
    (76) factor -> . cons
    (77) factor -> . LPAREN expression RPAREN
    (78) cons -> . id
    (79) cons -> . NUMINT int_type
    (80) cons -> . NUMFLOAT float_type
    (83) id -> . ID idp

    LPAREN          shift and go to state 111
    NUMINT          shift and go to state 104
    NUMFLOAT        shift and go to state 103
    ID              shift and go to state 70

    term                           shift and go to state 112
    cons                           shift and go to state 102
    cuadruplo_4                    shift and go to state 105
    cuadruplo_1                    shift and go to state 106
    cuadruplo_3                    shift and go to state 107
    sexp                           shift and go to state 123
    exp                            shift and go to state 113
    factor                         shift and go to state 109
    expression                     shift and go to state 114
    id                             shift and go to state 108

state 93

    (86) idp -> empty .

    ASSIGN          reduce using rule 86 (idp -> empty .)
    LSQUARE         reduce using rule 86 (idp -> empty .)
    COMMA           reduce using rule 86 (idp -> empty .)
    RPAREN          reduce using rule 86 (idp -> empty .)
    DIVISION        reduce using rule 86 (idp -> empty .)
    TIMES           reduce using rule 86 (idp -> empty .)
    PLUS            reduce using rule 86 (idp -> empty .)
    MINUS           reduce using rule 86 (idp -> empty .)
    AND             reduce using rule 86 (idp -> empty .)
    OR              reduce using rule 86 (idp -> empty .)
    SEMMICOLON      reduce using rule 86 (idp -> empty .)
    RSQUARE         reduce using rule 86 (idp -> empty .)


state 94

    (47) ciclo_if -> IF LPAREN . sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else
    (52) sexp -> . cuadruplo_1 sexprima
    (53) cuadruplo_1 -> . expression
    (57) expression -> . exp
    (65) exp -> . cuadruplo_3 expp
    (66) cuadruplo_3 -> . term
    (70) term -> . cuadruplo_4 termp
    (71) cuadruplo_4 -> . factor
    (76) factor -> . cons
    (77) factor -> . LPAREN expression RPAREN
    (78) cons -> . id
    (79) cons -> . NUMINT int_type
    (80) cons -> . NUMFLOAT float_type
    (83) id -> . ID idp

    LPAREN          shift and go to state 111
    NUMINT          shift and go to state 104
    NUMFLOAT        shift and go to state 103
    ID              shift and go to state 70

    term                           shift and go to state 112
    cuadruplo_4                    shift and go to state 105
    cuadruplo_1                    shift and go to state 106
    cuadruplo_3                    shift and go to state 107
    sexp                           shift and go to state 124
    cons                           shift and go to state 102
    exp                            shift and go to state 113
    factor                         shift and go to state 109
    expression                     shift and go to state 114
    id                             shift and go to state 108

state 95

    (28) estatuto -> call_process estatuto .

    RKEY            reduce using rule 28 (estatuto -> call_process estatuto .)


state 96

    (22) main_declaration -> MAIN LPAREN RPAREN LKEY estatuto RKEY .

    POINT           reduce using rule 22 (main_declaration -> MAIN LPAREN RPAREN LKEY estatuto RKEY .)


state 97

    (16) variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE SEMMICOLON .

    INT             reduce using rule 16 (variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE SEMMICOLON .)
    FLOAT           reduce using rule 16 (variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE SEMMICOLON .)
    ARRINT          reduce using rule 16 (variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE SEMMICOLON .)
    FUNCTION        reduce using rule 16 (variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE SEMMICOLON .)
    MAIN            reduce using rule 16 (variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE SEMMICOLON .)


state 98

    (17) variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE COMMA . variable_arrint_list
    (14) variable_arrint_list -> . ID LSQUARE ID RSQUARE SEMMICOLON
    (15) variable_arrint_list -> . ID LSQUARE ID RSQUARE COMMA variable_arrint_list
    (16) variable_arrint_list -> . ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE SEMMICOLON
    (17) variable_arrint_list -> . ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE COMMA variable_arrint_list

    ID              shift and go to state 10

    variable_arrint_list           shift and go to state 125

state 99

    (44) ciclo_while -> WHILE ciclo_while_1 LPAREN . sexp RPAREN LKEY estatuto RKEY ciclo_while_2
    (52) sexp -> . cuadruplo_1 sexprima
    (53) cuadruplo_1 -> . expression
    (57) expression -> . exp
    (65) exp -> . cuadruplo_3 expp
    (66) cuadruplo_3 -> . term
    (70) term -> . cuadruplo_4 termp
    (71) cuadruplo_4 -> . factor
    (76) factor -> . cons
    (77) factor -> . LPAREN expression RPAREN
    (78) cons -> . id
    (79) cons -> . NUMINT int_type
    (80) cons -> . NUMFLOAT float_type
    (83) id -> . ID idp

    LPAREN          shift and go to state 111
    NUMINT          shift and go to state 104
    NUMFLOAT        shift and go to state 103
    ID              shift and go to state 70

    term                           shift and go to state 112
    cuadruplo_4                    shift and go to state 105
    cuadruplo_1                    shift and go to state 106
    cuadruplo_3                    shift and go to state 107
    sexp                           shift and go to state 126
    cons                           shift and go to state 102
    exp                            shift and go to state 113
    factor                         shift and go to state 109
    expression                     shift and go to state 114
    id                             shift and go to state 108

state 100

    (32) print_process -> PRINT LPAREN print_1 . RPAREN SEMMICOLON

    RPAREN          shift and go to state 127


state 101

    (33) print_1 -> id . print_aux_1 print_prima_1
    (34) print_aux_1 -> .

    COMMA           reduce using rule 34 (print_aux_1 -> .)
    RPAREN          reduce using rule 34 (print_aux_1 -> .)

    print_aux_1                    shift and go to state 128

state 102

    (76) factor -> cons .

    DIVISION        reduce using rule 76 (factor -> cons .)
    TIMES           reduce using rule 76 (factor -> cons .)
    PLUS            reduce using rule 76 (factor -> cons .)
    MINUS           reduce using rule 76 (factor -> cons .)
    AND             reduce using rule 76 (factor -> cons .)
    OR              reduce using rule 76 (factor -> cons .)
    COMMA           reduce using rule 76 (factor -> cons .)
    RPAREN          reduce using rule 76 (factor -> cons .)
    SEMMICOLON      reduce using rule 76 (factor -> cons .)
    RSQUARE         reduce using rule 76 (factor -> cons .)


state 103

    (80) cons -> NUMFLOAT . float_type
    (82) float_type -> .

    DIVISION        reduce using rule 82 (float_type -> .)
    TIMES           reduce using rule 82 (float_type -> .)
    PLUS            reduce using rule 82 (float_type -> .)
    MINUS           reduce using rule 82 (float_type -> .)
    AND             reduce using rule 82 (float_type -> .)
    OR              reduce using rule 82 (float_type -> .)
    SEMMICOLON      reduce using rule 82 (float_type -> .)
    RSQUARE         reduce using rule 82 (float_type -> .)
    RPAREN          reduce using rule 82 (float_type -> .)
    COMMA           reduce using rule 82 (float_type -> .)

    float_type                     shift and go to state 129

state 104

    (79) cons -> NUMINT . int_type
    (81) int_type -> .

    DIVISION        reduce using rule 81 (int_type -> .)
    TIMES           reduce using rule 81 (int_type -> .)
    PLUS            reduce using rule 81 (int_type -> .)
    MINUS           reduce using rule 81 (int_type -> .)
    AND             reduce using rule 81 (int_type -> .)
    OR              reduce using rule 81 (int_type -> .)
    SEMMICOLON      reduce using rule 81 (int_type -> .)
    RSQUARE         reduce using rule 81 (int_type -> .)
    RPAREN          reduce using rule 81 (int_type -> .)
    COMMA           reduce using rule 81 (int_type -> .)

    int_type                       shift and go to state 130

state 105

    (70) term -> cuadruplo_4 . termp
    (72) termp -> . DIVISION push_operator term
    (73) termp -> . TIMES push_operator term
    (74) termp -> . empty
    (91) empty -> .

    DIVISION        shift and go to state 131
    TIMES           shift and go to state 133
    PLUS            reduce using rule 91 (empty -> .)
    MINUS           reduce using rule 91 (empty -> .)
    AND             reduce using rule 91 (empty -> .)
    OR              reduce using rule 91 (empty -> .)
    SEMMICOLON      reduce using rule 91 (empty -> .)
    RSQUARE         reduce using rule 91 (empty -> .)
    RPAREN          reduce using rule 91 (empty -> .)
    COMMA           reduce using rule 91 (empty -> .)

    empty                          shift and go to state 134
    termp                          shift and go to state 132

state 106

    (52) sexp -> cuadruplo_1 . sexprima
    (54) sexprima -> . AND push_operator sexp
    (55) sexprima -> . OR push_operator sexp
    (56) sexprima -> . empty
    (91) empty -> .

    AND             shift and go to state 135
    OR              shift and go to state 137
    SEMMICOLON      reduce using rule 91 (empty -> .)
    RPAREN          reduce using rule 91 (empty -> .)
    COMMA           reduce using rule 91 (empty -> .)
    RSQUARE         reduce using rule 91 (empty -> .)

    empty                          shift and go to state 138
    sexprima                       shift and go to state 136

state 107

    (65) exp -> cuadruplo_3 . expp
    (67) expp -> . PLUS push_operator exp
    (68) expp -> . MINUS push_operator exp
    (69) expp -> . empty
    (91) empty -> .

    PLUS            shift and go to state 140
    MINUS           shift and go to state 141
    AND             reduce using rule 91 (empty -> .)
    OR              reduce using rule 91 (empty -> .)
    SEMMICOLON      reduce using rule 91 (empty -> .)
    RSQUARE         reduce using rule 91 (empty -> .)
    RPAREN          reduce using rule 91 (empty -> .)
    COMMA           reduce using rule 91 (empty -> .)

    empty                          shift and go to state 142
    expp                           shift and go to state 139

state 108

    (78) cons -> id .

    DIVISION        reduce using rule 78 (cons -> id .)
    TIMES           reduce using rule 78 (cons -> id .)
    PLUS            reduce using rule 78 (cons -> id .)
    MINUS           reduce using rule 78 (cons -> id .)
    AND             reduce using rule 78 (cons -> id .)
    OR              reduce using rule 78 (cons -> id .)
    RPAREN          reduce using rule 78 (cons -> id .)
    SEMMICOLON      reduce using rule 78 (cons -> id .)
    RSQUARE         reduce using rule 78 (cons -> id .)
    COMMA           reduce using rule 78 (cons -> id .)


state 109

    (71) cuadruplo_4 -> factor .

    DIVISION        reduce using rule 71 (cuadruplo_4 -> factor .)
    TIMES           reduce using rule 71 (cuadruplo_4 -> factor .)
    PLUS            reduce using rule 71 (cuadruplo_4 -> factor .)
    MINUS           reduce using rule 71 (cuadruplo_4 -> factor .)
    RSQUARE         reduce using rule 71 (cuadruplo_4 -> factor .)
    AND             reduce using rule 71 (cuadruplo_4 -> factor .)
    OR              reduce using rule 71 (cuadruplo_4 -> factor .)
    SEMMICOLON      reduce using rule 71 (cuadruplo_4 -> factor .)
    RPAREN          reduce using rule 71 (cuadruplo_4 -> factor .)
    COMMA           reduce using rule 71 (cuadruplo_4 -> factor .)


state 110

    (40) id_asignacion_prima -> ASSIGN sexp . SEMMICOLON

    SEMMICOLON      shift and go to state 143


state 111

    (77) factor -> LPAREN . expression RPAREN
    (57) expression -> . exp
    (65) exp -> . cuadruplo_3 expp
    (66) cuadruplo_3 -> . term
    (70) term -> . cuadruplo_4 termp
    (71) cuadruplo_4 -> . factor
    (76) factor -> . cons
    (77) factor -> . LPAREN expression RPAREN
    (78) cons -> . id
    (79) cons -> . NUMINT int_type
    (80) cons -> . NUMFLOAT float_type
    (83) id -> . ID idp

    LPAREN          shift and go to state 111
    NUMINT          shift and go to state 104
    NUMFLOAT        shift and go to state 103
    ID              shift and go to state 70

    term                           shift and go to state 112
    cons                           shift and go to state 102
    cuadruplo_4                    shift and go to state 105
    cuadruplo_3                    shift and go to state 107
    exp                            shift and go to state 113
    factor                         shift and go to state 109
    expression                     shift and go to state 144
    id                             shift and go to state 108

state 112

    (66) cuadruplo_3 -> term .

    PLUS            reduce using rule 66 (cuadruplo_3 -> term .)
    MINUS           reduce using rule 66 (cuadruplo_3 -> term .)
    AND             reduce using rule 66 (cuadruplo_3 -> term .)
    OR              reduce using rule 66 (cuadruplo_3 -> term .)
    SEMMICOLON      reduce using rule 66 (cuadruplo_3 -> term .)
    RPAREN          reduce using rule 66 (cuadruplo_3 -> term .)
    COMMA           reduce using rule 66 (cuadruplo_3 -> term .)
    RSQUARE         reduce using rule 66 (cuadruplo_3 -> term .)


state 113

    (57) expression -> exp .

    AND             reduce using rule 57 (expression -> exp .)
    OR              reduce using rule 57 (expression -> exp .)
    RSQUARE         reduce using rule 57 (expression -> exp .)
    SEMMICOLON      reduce using rule 57 (expression -> exp .)
    RPAREN          reduce using rule 57 (expression -> exp .)
    COMMA           reduce using rule 57 (expression -> exp .)


state 114

    (53) cuadruplo_1 -> expression .

    AND             reduce using rule 53 (cuadruplo_1 -> expression .)
    OR              reduce using rule 53 (cuadruplo_1 -> expression .)
    SEMMICOLON      reduce using rule 53 (cuadruplo_1 -> expression .)
    RPAREN          reduce using rule 53 (cuadruplo_1 -> expression .)
    RSQUARE         reduce using rule 53 (cuadruplo_1 -> expression .)
    COMMA           reduce using rule 53 (cuadruplo_1 -> expression .)


state 115

    (41) id_asignacion_prima -> LSQUARE expression . RSQUARE ASSIGN sexp SEMMICOLON
    (42) id_asignacion_prima -> LSQUARE expression . RSQUARE LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON

    RSQUARE         shift and go to state 145


state 116

    (20) function_1 -> FUNCTION ID LPAREN RPAREN LKEY estatuto RKEY function_1 .

    MAIN            reduce using rule 20 (function_1 -> FUNCTION ID LPAREN RPAREN LKEY estatuto RKEY function_1 .)


state 117

    (38) read_process -> READ LPAREN sexp . RPAREN SEMMICOLON

    RPAREN          shift and go to state 146


state 118

    (31) call_process -> CALL ID LPAREN . RPAREN SEMMICOLON

    RPAREN          shift and go to state 147


state 119

    (43) ciclo_for -> FOR LPAREN ID . ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY

    ASSIGN          shift and go to state 148


state 120

    (88) idpp -> empty .

    RPAREN          reduce using rule 88 (idpp -> empty .)


state 121

    (87) idpp -> sexp . idppaux
    (89) idppaux -> . COMMA idpp
    (90) idppaux -> . empty
    (91) empty -> .

    COMMA           shift and go to state 149
    RPAREN          reduce using rule 91 (empty -> .)

    idppaux                        shift and go to state 150
    empty                          shift and go to state 151

state 122

    (85) idp -> LPAREN idpp . RPAREN

    RPAREN          shift and go to state 152


state 123

    (84) idp -> LSQUARE sexp . RSQUARE

    RSQUARE         shift and go to state 153


state 124

    (47) ciclo_if -> IF LPAREN sexp . RPAREN ciclo_if_1 LKEY estatuto RKEY if_else

    RPAREN          shift and go to state 154


state 125

    (17) variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE COMMA variable_arrint_list .

    INT             reduce using rule 17 (variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE COMMA variable_arrint_list .)
    FLOAT           reduce using rule 17 (variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE COMMA variable_arrint_list .)
    ARRINT          reduce using rule 17 (variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE COMMA variable_arrint_list .)
    FUNCTION        reduce using rule 17 (variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE COMMA variable_arrint_list .)
    MAIN            reduce using rule 17 (variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE COMMA variable_arrint_list .)


state 126

    (44) ciclo_while -> WHILE ciclo_while_1 LPAREN sexp . RPAREN LKEY estatuto RKEY ciclo_while_2

    RPAREN          shift and go to state 155


state 127

    (32) print_process -> PRINT LPAREN print_1 RPAREN . SEMMICOLON

    SEMMICOLON      shift and go to state 156


state 128

    (33) print_1 -> id print_aux_1 . print_prima_1
    (35) print_prima_1 -> . COMMA print_prima_2 print_1
    (36) print_prima_1 -> . empty print_prima_2
    (91) empty -> .

    COMMA           shift and go to state 158
    RPAREN          reduce using rule 91 (empty -> .)

    print_prima_1                  shift and go to state 157
    empty                          shift and go to state 159

state 129

    (80) cons -> NUMFLOAT float_type .

    DIVISION        reduce using rule 80 (cons -> NUMFLOAT float_type .)
    TIMES           reduce using rule 80 (cons -> NUMFLOAT float_type .)
    PLUS            reduce using rule 80 (cons -> NUMFLOAT float_type .)
    MINUS           reduce using rule 80 (cons -> NUMFLOAT float_type .)
    AND             reduce using rule 80 (cons -> NUMFLOAT float_type .)
    OR              reduce using rule 80 (cons -> NUMFLOAT float_type .)
    RPAREN          reduce using rule 80 (cons -> NUMFLOAT float_type .)
    SEMMICOLON      reduce using rule 80 (cons -> NUMFLOAT float_type .)
    RSQUARE         reduce using rule 80 (cons -> NUMFLOAT float_type .)
    COMMA           reduce using rule 80 (cons -> NUMFLOAT float_type .)


state 130

    (79) cons -> NUMINT int_type .

    DIVISION        reduce using rule 79 (cons -> NUMINT int_type .)
    TIMES           reduce using rule 79 (cons -> NUMINT int_type .)
    PLUS            reduce using rule 79 (cons -> NUMINT int_type .)
    MINUS           reduce using rule 79 (cons -> NUMINT int_type .)
    AND             reduce using rule 79 (cons -> NUMINT int_type .)
    OR              reduce using rule 79 (cons -> NUMINT int_type .)
    RPAREN          reduce using rule 79 (cons -> NUMINT int_type .)
    SEMMICOLON      reduce using rule 79 (cons -> NUMINT int_type .)
    RSQUARE         reduce using rule 79 (cons -> NUMINT int_type .)
    COMMA           reduce using rule 79 (cons -> NUMINT int_type .)


state 131

    (72) termp -> DIVISION . push_operator term
    (75) push_operator -> .

    LPAREN          reduce using rule 75 (push_operator -> .)
    NUMINT          reduce using rule 75 (push_operator -> .)
    NUMFLOAT        reduce using rule 75 (push_operator -> .)
    ID              reduce using rule 75 (push_operator -> .)

    push_operator                  shift and go to state 160

state 132

    (70) term -> cuadruplo_4 termp .

    PLUS            reduce using rule 70 (term -> cuadruplo_4 termp .)
    MINUS           reduce using rule 70 (term -> cuadruplo_4 termp .)
    AND             reduce using rule 70 (term -> cuadruplo_4 termp .)
    OR              reduce using rule 70 (term -> cuadruplo_4 termp .)
    SEMMICOLON      reduce using rule 70 (term -> cuadruplo_4 termp .)
    RPAREN          reduce using rule 70 (term -> cuadruplo_4 termp .)
    COMMA           reduce using rule 70 (term -> cuadruplo_4 termp .)
    RSQUARE         reduce using rule 70 (term -> cuadruplo_4 termp .)


state 133

    (73) termp -> TIMES . push_operator term
    (75) push_operator -> .

    LPAREN          reduce using rule 75 (push_operator -> .)
    NUMINT          reduce using rule 75 (push_operator -> .)
    NUMFLOAT        reduce using rule 75 (push_operator -> .)
    ID              reduce using rule 75 (push_operator -> .)

    push_operator                  shift and go to state 161

state 134

    (74) termp -> empty .

    PLUS            reduce using rule 74 (termp -> empty .)
    MINUS           reduce using rule 74 (termp -> empty .)
    AND             reduce using rule 74 (termp -> empty .)
    OR              reduce using rule 74 (termp -> empty .)
    SEMMICOLON      reduce using rule 74 (termp -> empty .)
    RSQUARE         reduce using rule 74 (termp -> empty .)
    RPAREN          reduce using rule 74 (termp -> empty .)
    COMMA           reduce using rule 74 (termp -> empty .)


state 135

    (54) sexprima -> AND . push_operator sexp
    (75) push_operator -> .

    LPAREN          reduce using rule 75 (push_operator -> .)
    NUMINT          reduce using rule 75 (push_operator -> .)
    NUMFLOAT        reduce using rule 75 (push_operator -> .)
    ID              reduce using rule 75 (push_operator -> .)

    push_operator                  shift and go to state 162

state 136

    (52) sexp -> cuadruplo_1 sexprima .

    SEMMICOLON      reduce using rule 52 (sexp -> cuadruplo_1 sexprima .)
    RPAREN          reduce using rule 52 (sexp -> cuadruplo_1 sexprima .)
    COMMA           reduce using rule 52 (sexp -> cuadruplo_1 sexprima .)
    RSQUARE         reduce using rule 52 (sexp -> cuadruplo_1 sexprima .)


state 137

    (55) sexprima -> OR . push_operator sexp
    (75) push_operator -> .

    LPAREN          reduce using rule 75 (push_operator -> .)
    NUMINT          reduce using rule 75 (push_operator -> .)
    NUMFLOAT        reduce using rule 75 (push_operator -> .)
    ID              reduce using rule 75 (push_operator -> .)

    push_operator                  shift and go to state 163

state 138

    (56) sexprima -> empty .

    SEMMICOLON      reduce using rule 56 (sexprima -> empty .)
    RPAREN          reduce using rule 56 (sexprima -> empty .)
    COMMA           reduce using rule 56 (sexprima -> empty .)
    RSQUARE         reduce using rule 56 (sexprima -> empty .)


state 139

    (65) exp -> cuadruplo_3 expp .

    AND             reduce using rule 65 (exp -> cuadruplo_3 expp .)
    OR              reduce using rule 65 (exp -> cuadruplo_3 expp .)
    RPAREN          reduce using rule 65 (exp -> cuadruplo_3 expp .)
    SEMMICOLON      reduce using rule 65 (exp -> cuadruplo_3 expp .)
    COMMA           reduce using rule 65 (exp -> cuadruplo_3 expp .)
    RSQUARE         reduce using rule 65 (exp -> cuadruplo_3 expp .)


state 140

    (67) expp -> PLUS . push_operator exp
    (75) push_operator -> .

    LPAREN          reduce using rule 75 (push_operator -> .)
    NUMINT          reduce using rule 75 (push_operator -> .)
    NUMFLOAT        reduce using rule 75 (push_operator -> .)
    ID              reduce using rule 75 (push_operator -> .)

    push_operator                  shift and go to state 164

state 141

    (68) expp -> MINUS . push_operator exp
    (75) push_operator -> .

    LPAREN          reduce using rule 75 (push_operator -> .)
    NUMINT          reduce using rule 75 (push_operator -> .)
    NUMFLOAT        reduce using rule 75 (push_operator -> .)
    ID              reduce using rule 75 (push_operator -> .)

    push_operator                  shift and go to state 165

state 142

    (69) expp -> empty .

    AND             reduce using rule 69 (expp -> empty .)
    OR              reduce using rule 69 (expp -> empty .)
    SEMMICOLON      reduce using rule 69 (expp -> empty .)
    RSQUARE         reduce using rule 69 (expp -> empty .)
    RPAREN          reduce using rule 69 (expp -> empty .)
    COMMA           reduce using rule 69 (expp -> empty .)


state 143

    (40) id_asignacion_prima -> ASSIGN sexp SEMMICOLON .

    FOR             reduce using rule 40 (id_asignacion_prima -> ASSIGN sexp SEMMICOLON .)
    IF              reduce using rule 40 (id_asignacion_prima -> ASSIGN sexp SEMMICOLON .)
    WHILE           reduce using rule 40 (id_asignacion_prima -> ASSIGN sexp SEMMICOLON .)
    READ            reduce using rule 40 (id_asignacion_prima -> ASSIGN sexp SEMMICOLON .)
    PRINT           reduce using rule 40 (id_asignacion_prima -> ASSIGN sexp SEMMICOLON .)
    CALL            reduce using rule 40 (id_asignacion_prima -> ASSIGN sexp SEMMICOLON .)
    ID              reduce using rule 40 (id_asignacion_prima -> ASSIGN sexp SEMMICOLON .)
    RKEY            reduce using rule 40 (id_asignacion_prima -> ASSIGN sexp SEMMICOLON .)


state 144

    (77) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 166


state 145

    (41) id_asignacion_prima -> LSQUARE expression RSQUARE . ASSIGN sexp SEMMICOLON
    (42) id_asignacion_prima -> LSQUARE expression RSQUARE . LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON

    ASSIGN          shift and go to state 168
    LSQUARE         shift and go to state 167


state 146

    (38) read_process -> READ LPAREN sexp RPAREN . SEMMICOLON

    SEMMICOLON      shift and go to state 169


state 147

    (31) call_process -> CALL ID LPAREN RPAREN . SEMMICOLON

    SEMMICOLON      shift and go to state 170


state 148

    (43) ciclo_for -> FOR LPAREN ID ASSIGN . sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY
    (52) sexp -> . cuadruplo_1 sexprima
    (53) cuadruplo_1 -> . expression
    (57) expression -> . exp
    (65) exp -> . cuadruplo_3 expp
    (66) cuadruplo_3 -> . term
    (70) term -> . cuadruplo_4 termp
    (71) cuadruplo_4 -> . factor
    (76) factor -> . cons
    (77) factor -> . LPAREN expression RPAREN
    (78) cons -> . id
    (79) cons -> . NUMINT int_type
    (80) cons -> . NUMFLOAT float_type
    (83) id -> . ID idp

    LPAREN          shift and go to state 111
    NUMINT          shift and go to state 104
    NUMFLOAT        shift and go to state 103
    ID              shift and go to state 70

    term                           shift and go to state 112
    cuadruplo_4                    shift and go to state 105
    cuadruplo_1                    shift and go to state 106
    cuadruplo_3                    shift and go to state 107
    sexp                           shift and go to state 171
    cons                           shift and go to state 102
    exp                            shift and go to state 113
    factor                         shift and go to state 109
    expression                     shift and go to state 114
    id                             shift and go to state 108

state 149

    (89) idppaux -> COMMA . idpp
    (87) idpp -> . sexp idppaux
    (88) idpp -> . empty
    (52) sexp -> . cuadruplo_1 sexprima
    (91) empty -> .
    (53) cuadruplo_1 -> . expression
    (57) expression -> . exp
    (65) exp -> . cuadruplo_3 expp
    (66) cuadruplo_3 -> . term
    (70) term -> . cuadruplo_4 termp
    (71) cuadruplo_4 -> . factor
    (76) factor -> . cons
    (77) factor -> . LPAREN expression RPAREN
    (78) cons -> . id
    (79) cons -> . NUMINT int_type
    (80) cons -> . NUMFLOAT float_type
    (83) id -> . ID idp

    RPAREN          reduce using rule 91 (empty -> .)
    LPAREN          shift and go to state 111
    NUMINT          shift and go to state 104
    NUMFLOAT        shift and go to state 103
    ID              shift and go to state 70

    term                           shift and go to state 112
    cons                           shift and go to state 102
    cuadruplo_4                    shift and go to state 105
    cuadruplo_1                    shift and go to state 106
    cuadruplo_3                    shift and go to state 107
    sexp                           shift and go to state 121
    idpp                           shift and go to state 172
    exp                            shift and go to state 113
    factor                         shift and go to state 109
    expression                     shift and go to state 114
    id                             shift and go to state 108
    empty                          shift and go to state 120

state 150

    (87) idpp -> sexp idppaux .

    RPAREN          reduce using rule 87 (idpp -> sexp idppaux .)


state 151

    (90) idppaux -> empty .

    RPAREN          reduce using rule 90 (idppaux -> empty .)


state 152

    (85) idp -> LPAREN idpp RPAREN .

    ASSIGN          reduce using rule 85 (idp -> LPAREN idpp RPAREN .)
    LSQUARE         reduce using rule 85 (idp -> LPAREN idpp RPAREN .)
    COMMA           reduce using rule 85 (idp -> LPAREN idpp RPAREN .)
    RPAREN          reduce using rule 85 (idp -> LPAREN idpp RPAREN .)
    DIVISION        reduce using rule 85 (idp -> LPAREN idpp RPAREN .)
    TIMES           reduce using rule 85 (idp -> LPAREN idpp RPAREN .)
    PLUS            reduce using rule 85 (idp -> LPAREN idpp RPAREN .)
    MINUS           reduce using rule 85 (idp -> LPAREN idpp RPAREN .)
    AND             reduce using rule 85 (idp -> LPAREN idpp RPAREN .)
    OR              reduce using rule 85 (idp -> LPAREN idpp RPAREN .)
    SEMMICOLON      reduce using rule 85 (idp -> LPAREN idpp RPAREN .)
    RSQUARE         reduce using rule 85 (idp -> LPAREN idpp RPAREN .)


state 153

    (84) idp -> LSQUARE sexp RSQUARE .

    ASSIGN          reduce using rule 84 (idp -> LSQUARE sexp RSQUARE .)
    LSQUARE         reduce using rule 84 (idp -> LSQUARE sexp RSQUARE .)
    COMMA           reduce using rule 84 (idp -> LSQUARE sexp RSQUARE .)
    RPAREN          reduce using rule 84 (idp -> LSQUARE sexp RSQUARE .)
    DIVISION        reduce using rule 84 (idp -> LSQUARE sexp RSQUARE .)
    TIMES           reduce using rule 84 (idp -> LSQUARE sexp RSQUARE .)
    PLUS            reduce using rule 84 (idp -> LSQUARE sexp RSQUARE .)
    MINUS           reduce using rule 84 (idp -> LSQUARE sexp RSQUARE .)
    AND             reduce using rule 84 (idp -> LSQUARE sexp RSQUARE .)
    OR              reduce using rule 84 (idp -> LSQUARE sexp RSQUARE .)
    SEMMICOLON      reduce using rule 84 (idp -> LSQUARE sexp RSQUARE .)
    RSQUARE         reduce using rule 84 (idp -> LSQUARE sexp RSQUARE .)


state 154

    (47) ciclo_if -> IF LPAREN sexp RPAREN . ciclo_if_1 LKEY estatuto RKEY if_else
    (48) ciclo_if_1 -> .

    LKEY            reduce using rule 48 (ciclo_if_1 -> .)

    ciclo_if_1                     shift and go to state 173

state 155

    (44) ciclo_while -> WHILE ciclo_while_1 LPAREN sexp RPAREN . LKEY estatuto RKEY ciclo_while_2

    LKEY            shift and go to state 174


state 156

    (32) print_process -> PRINT LPAREN print_1 RPAREN SEMMICOLON .

    FOR             reduce using rule 32 (print_process -> PRINT LPAREN print_1 RPAREN SEMMICOLON .)
    IF              reduce using rule 32 (print_process -> PRINT LPAREN print_1 RPAREN SEMMICOLON .)
    WHILE           reduce using rule 32 (print_process -> PRINT LPAREN print_1 RPAREN SEMMICOLON .)
    READ            reduce using rule 32 (print_process -> PRINT LPAREN print_1 RPAREN SEMMICOLON .)
    PRINT           reduce using rule 32 (print_process -> PRINT LPAREN print_1 RPAREN SEMMICOLON .)
    CALL            reduce using rule 32 (print_process -> PRINT LPAREN print_1 RPAREN SEMMICOLON .)
    ID              reduce using rule 32 (print_process -> PRINT LPAREN print_1 RPAREN SEMMICOLON .)
    RKEY            reduce using rule 32 (print_process -> PRINT LPAREN print_1 RPAREN SEMMICOLON .)


state 157

    (33) print_1 -> id print_aux_1 print_prima_1 .

    RPAREN          reduce using rule 33 (print_1 -> id print_aux_1 print_prima_1 .)


state 158

    (35) print_prima_1 -> COMMA . print_prima_2 print_1
    (37) print_prima_2 -> .

    ID              reduce using rule 37 (print_prima_2 -> .)

    print_prima_2                  shift and go to state 175

state 159

    (36) print_prima_1 -> empty . print_prima_2
    (37) print_prima_2 -> .

    RPAREN          reduce using rule 37 (print_prima_2 -> .)

    print_prima_2                  shift and go to state 176

state 160

    (72) termp -> DIVISION push_operator . term
    (70) term -> . cuadruplo_4 termp
    (71) cuadruplo_4 -> . factor
    (76) factor -> . cons
    (77) factor -> . LPAREN expression RPAREN
    (78) cons -> . id
    (79) cons -> . NUMINT int_type
    (80) cons -> . NUMFLOAT float_type
    (83) id -> . ID idp

    LPAREN          shift and go to state 111
    NUMINT          shift and go to state 104
    NUMFLOAT        shift and go to state 103
    ID              shift and go to state 70

    term                           shift and go to state 177
    cons                           shift and go to state 102
    cuadruplo_4                    shift and go to state 105
    factor                         shift and go to state 109
    id                             shift and go to state 108

state 161

    (73) termp -> TIMES push_operator . term
    (70) term -> . cuadruplo_4 termp
    (71) cuadruplo_4 -> . factor
    (76) factor -> . cons
    (77) factor -> . LPAREN expression RPAREN
    (78) cons -> . id
    (79) cons -> . NUMINT int_type
    (80) cons -> . NUMFLOAT float_type
    (83) id -> . ID idp

    LPAREN          shift and go to state 111
    NUMINT          shift and go to state 104
    NUMFLOAT        shift and go to state 103
    ID              shift and go to state 70

    term                           shift and go to state 178
    cons                           shift and go to state 102
    cuadruplo_4                    shift and go to state 105
    factor                         shift and go to state 109
    id                             shift and go to state 108

state 162

    (54) sexprima -> AND push_operator . sexp
    (52) sexp -> . cuadruplo_1 sexprima
    (53) cuadruplo_1 -> . expression
    (57) expression -> . exp
    (65) exp -> . cuadruplo_3 expp
    (66) cuadruplo_3 -> . term
    (70) term -> . cuadruplo_4 termp
    (71) cuadruplo_4 -> . factor
    (76) factor -> . cons
    (77) factor -> . LPAREN expression RPAREN
    (78) cons -> . id
    (79) cons -> . NUMINT int_type
    (80) cons -> . NUMFLOAT float_type
    (83) id -> . ID idp

    LPAREN          shift and go to state 111
    NUMINT          shift and go to state 104
    NUMFLOAT        shift and go to state 103
    ID              shift and go to state 70

    term                           shift and go to state 112
    cons                           shift and go to state 102
    cuadruplo_4                    shift and go to state 105
    cuadruplo_1                    shift and go to state 106
    sexp                           shift and go to state 179
    cuadruplo_3                    shift and go to state 107
    exp                            shift and go to state 113
    factor                         shift and go to state 109
    expression                     shift and go to state 114
    id                             shift and go to state 108

state 163

    (55) sexprima -> OR push_operator . sexp
    (52) sexp -> . cuadruplo_1 sexprima
    (53) cuadruplo_1 -> . expression
    (57) expression -> . exp
    (65) exp -> . cuadruplo_3 expp
    (66) cuadruplo_3 -> . term
    (70) term -> . cuadruplo_4 termp
    (71) cuadruplo_4 -> . factor
    (76) factor -> . cons
    (77) factor -> . LPAREN expression RPAREN
    (78) cons -> . id
    (79) cons -> . NUMINT int_type
    (80) cons -> . NUMFLOAT float_type
    (83) id -> . ID idp

    LPAREN          shift and go to state 111
    NUMINT          shift and go to state 104
    NUMFLOAT        shift and go to state 103
    ID              shift and go to state 70

    term                           shift and go to state 112
    cons                           shift and go to state 102
    cuadruplo_4                    shift and go to state 105
    cuadruplo_1                    shift and go to state 106
    sexp                           shift and go to state 180
    cuadruplo_3                    shift and go to state 107
    exp                            shift and go to state 113
    factor                         shift and go to state 109
    expression                     shift and go to state 114
    id                             shift and go to state 108

state 164

    (67) expp -> PLUS push_operator . exp
    (65) exp -> . cuadruplo_3 expp
    (66) cuadruplo_3 -> . term
    (70) term -> . cuadruplo_4 termp
    (71) cuadruplo_4 -> . factor
    (76) factor -> . cons
    (77) factor -> . LPAREN expression RPAREN
    (78) cons -> . id
    (79) cons -> . NUMINT int_type
    (80) cons -> . NUMFLOAT float_type
    (83) id -> . ID idp

    LPAREN          shift and go to state 111
    NUMINT          shift and go to state 104
    NUMFLOAT        shift and go to state 103
    ID              shift and go to state 70

    term                           shift and go to state 112
    cons                           shift and go to state 102
    cuadruplo_4                    shift and go to state 105
    cuadruplo_3                    shift and go to state 107
    exp                            shift and go to state 181
    factor                         shift and go to state 109
    id                             shift and go to state 108

state 165

    (68) expp -> MINUS push_operator . exp
    (65) exp -> . cuadruplo_3 expp
    (66) cuadruplo_3 -> . term
    (70) term -> . cuadruplo_4 termp
    (71) cuadruplo_4 -> . factor
    (76) factor -> . cons
    (77) factor -> . LPAREN expression RPAREN
    (78) cons -> . id
    (79) cons -> . NUMINT int_type
    (80) cons -> . NUMFLOAT float_type
    (83) id -> . ID idp

    LPAREN          shift and go to state 111
    NUMINT          shift and go to state 104
    NUMFLOAT        shift and go to state 103
    ID              shift and go to state 70

    term                           shift and go to state 112
    cons                           shift and go to state 102
    cuadruplo_4                    shift and go to state 105
    cuadruplo_3                    shift and go to state 107
    exp                            shift and go to state 182
    factor                         shift and go to state 109
    id                             shift and go to state 108

state 166

    (77) factor -> LPAREN expression RPAREN .

    DIVISION        reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    SEMMICOLON      reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    RSQUARE         reduce using rule 77 (factor -> LPAREN expression RPAREN .)


state 167

    (42) id_asignacion_prima -> LSQUARE expression RSQUARE LSQUARE . expression RSQUARE ASSIGN sexp SEMMICOLON
    (57) expression -> . exp
    (65) exp -> . cuadruplo_3 expp
    (66) cuadruplo_3 -> . term
    (70) term -> . cuadruplo_4 termp
    (71) cuadruplo_4 -> . factor
    (76) factor -> . cons
    (77) factor -> . LPAREN expression RPAREN
    (78) cons -> . id
    (79) cons -> . NUMINT int_type
    (80) cons -> . NUMFLOAT float_type
    (83) id -> . ID idp

    LPAREN          shift and go to state 111
    NUMINT          shift and go to state 104
    NUMFLOAT        shift and go to state 103
    ID              shift and go to state 70

    term                           shift and go to state 112
    cons                           shift and go to state 102
    cuadruplo_4                    shift and go to state 105
    cuadruplo_3                    shift and go to state 107
    exp                            shift and go to state 113
    factor                         shift and go to state 109
    expression                     shift and go to state 183
    id                             shift and go to state 108

state 168

    (41) id_asignacion_prima -> LSQUARE expression RSQUARE ASSIGN . sexp SEMMICOLON
    (52) sexp -> . cuadruplo_1 sexprima
    (53) cuadruplo_1 -> . expression
    (57) expression -> . exp
    (65) exp -> . cuadruplo_3 expp
    (66) cuadruplo_3 -> . term
    (70) term -> . cuadruplo_4 termp
    (71) cuadruplo_4 -> . factor
    (76) factor -> . cons
    (77) factor -> . LPAREN expression RPAREN
    (78) cons -> . id
    (79) cons -> . NUMINT int_type
    (80) cons -> . NUMFLOAT float_type
    (83) id -> . ID idp

    LPAREN          shift and go to state 111
    NUMINT          shift and go to state 104
    NUMFLOAT        shift and go to state 103
    ID              shift and go to state 70

    term                           shift and go to state 112
    cons                           shift and go to state 102
    cuadruplo_4                    shift and go to state 105
    cuadruplo_1                    shift and go to state 106
    cuadruplo_3                    shift and go to state 107
    sexp                           shift and go to state 184
    exp                            shift and go to state 113
    factor                         shift and go to state 109
    expression                     shift and go to state 114
    id                             shift and go to state 108

state 169

    (38) read_process -> READ LPAREN sexp RPAREN SEMMICOLON .

    FOR             reduce using rule 38 (read_process -> READ LPAREN sexp RPAREN SEMMICOLON .)
    IF              reduce using rule 38 (read_process -> READ LPAREN sexp RPAREN SEMMICOLON .)
    WHILE           reduce using rule 38 (read_process -> READ LPAREN sexp RPAREN SEMMICOLON .)
    READ            reduce using rule 38 (read_process -> READ LPAREN sexp RPAREN SEMMICOLON .)
    PRINT           reduce using rule 38 (read_process -> READ LPAREN sexp RPAREN SEMMICOLON .)
    CALL            reduce using rule 38 (read_process -> READ LPAREN sexp RPAREN SEMMICOLON .)
    ID              reduce using rule 38 (read_process -> READ LPAREN sexp RPAREN SEMMICOLON .)
    RKEY            reduce using rule 38 (read_process -> READ LPAREN sexp RPAREN SEMMICOLON .)


state 170

    (31) call_process -> CALL ID LPAREN RPAREN SEMMICOLON .

    FOR             reduce using rule 31 (call_process -> CALL ID LPAREN RPAREN SEMMICOLON .)
    IF              reduce using rule 31 (call_process -> CALL ID LPAREN RPAREN SEMMICOLON .)
    WHILE           reduce using rule 31 (call_process -> CALL ID LPAREN RPAREN SEMMICOLON .)
    READ            reduce using rule 31 (call_process -> CALL ID LPAREN RPAREN SEMMICOLON .)
    PRINT           reduce using rule 31 (call_process -> CALL ID LPAREN RPAREN SEMMICOLON .)
    CALL            reduce using rule 31 (call_process -> CALL ID LPAREN RPAREN SEMMICOLON .)
    ID              reduce using rule 31 (call_process -> CALL ID LPAREN RPAREN SEMMICOLON .)
    RKEY            reduce using rule 31 (call_process -> CALL ID LPAREN RPAREN SEMMICOLON .)


state 171

    (43) ciclo_for -> FOR LPAREN ID ASSIGN sexp . SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY

    SEMMICOLON      shift and go to state 185


state 172

    (89) idppaux -> COMMA idpp .

    RPAREN          reduce using rule 89 (idppaux -> COMMA idpp .)


state 173

    (47) ciclo_if -> IF LPAREN sexp RPAREN ciclo_if_1 . LKEY estatuto RKEY if_else

    LKEY            shift and go to state 186


state 174

    (44) ciclo_while -> WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY . estatuto RKEY ciclo_while_2
    (23) estatuto -> . ciclo_for estatuto
    (24) estatuto -> . ciclo_if estatuto
    (25) estatuto -> . ciclo_while estatuto
    (26) estatuto -> . read_process estatuto
    (27) estatuto -> . print_process estatuto
    (28) estatuto -> . call_process estatuto
    (29) estatuto -> . id_asignacion estatuto
    (30) estatuto -> . empty
    (43) ciclo_for -> . FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY
    (47) ciclo_if -> . IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else
    (44) ciclo_while -> . WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2
    (38) read_process -> . READ LPAREN sexp RPAREN SEMMICOLON
    (32) print_process -> . PRINT LPAREN print_1 RPAREN SEMMICOLON
    (31) call_process -> . CALL ID LPAREN RPAREN SEMMICOLON
    (39) id_asignacion -> . id id_asignacion_prima
    (91) empty -> .
    (83) id -> . ID idp

    FOR             shift and go to state 67
    IF              shift and go to state 71
    WHILE           shift and go to state 59
    READ            shift and go to state 63
    PRINT           shift and go to state 60
    CALL            shift and go to state 64
    RKEY            reduce using rule 91 (empty -> .)
    ID              shift and go to state 70

    ciclo_for                      shift and go to state 56
    read_process                   shift and go to state 57
    ciclo_while                    shift and go to state 58
    estatuto                       shift and go to state 187
    id                             shift and go to state 61
    ciclo_if                       shift and go to state 68
    print_process                  shift and go to state 69
    id_asignacion                  shift and go to state 65
    call_process                   shift and go to state 72
    empty                          shift and go to state 66

state 175

    (35) print_prima_1 -> COMMA print_prima_2 . print_1
    (33) print_1 -> . id print_aux_1 print_prima_1
    (83) id -> . ID idp

    ID              shift and go to state 70

    print_1                        shift and go to state 188
    id                             shift and go to state 101

state 176

    (36) print_prima_1 -> empty print_prima_2 .

    RPAREN          reduce using rule 36 (print_prima_1 -> empty print_prima_2 .)


state 177

    (72) termp -> DIVISION push_operator term .

    PLUS            reduce using rule 72 (termp -> DIVISION push_operator term .)
    MINUS           reduce using rule 72 (termp -> DIVISION push_operator term .)
    AND             reduce using rule 72 (termp -> DIVISION push_operator term .)
    OR              reduce using rule 72 (termp -> DIVISION push_operator term .)
    SEMMICOLON      reduce using rule 72 (termp -> DIVISION push_operator term .)
    RSQUARE         reduce using rule 72 (termp -> DIVISION push_operator term .)
    RPAREN          reduce using rule 72 (termp -> DIVISION push_operator term .)
    COMMA           reduce using rule 72 (termp -> DIVISION push_operator term .)


state 178

    (73) termp -> TIMES push_operator term .

    PLUS            reduce using rule 73 (termp -> TIMES push_operator term .)
    MINUS           reduce using rule 73 (termp -> TIMES push_operator term .)
    AND             reduce using rule 73 (termp -> TIMES push_operator term .)
    OR              reduce using rule 73 (termp -> TIMES push_operator term .)
    SEMMICOLON      reduce using rule 73 (termp -> TIMES push_operator term .)
    RSQUARE         reduce using rule 73 (termp -> TIMES push_operator term .)
    RPAREN          reduce using rule 73 (termp -> TIMES push_operator term .)
    COMMA           reduce using rule 73 (termp -> TIMES push_operator term .)


state 179

    (54) sexprima -> AND push_operator sexp .

    SEMMICOLON      reduce using rule 54 (sexprima -> AND push_operator sexp .)
    RPAREN          reduce using rule 54 (sexprima -> AND push_operator sexp .)
    COMMA           reduce using rule 54 (sexprima -> AND push_operator sexp .)
    RSQUARE         reduce using rule 54 (sexprima -> AND push_operator sexp .)


state 180

    (55) sexprima -> OR push_operator sexp .

    SEMMICOLON      reduce using rule 55 (sexprima -> OR push_operator sexp .)
    RPAREN          reduce using rule 55 (sexprima -> OR push_operator sexp .)
    COMMA           reduce using rule 55 (sexprima -> OR push_operator sexp .)
    RSQUARE         reduce using rule 55 (sexprima -> OR push_operator sexp .)


state 181

    (67) expp -> PLUS push_operator exp .

    AND             reduce using rule 67 (expp -> PLUS push_operator exp .)
    OR              reduce using rule 67 (expp -> PLUS push_operator exp .)
    SEMMICOLON      reduce using rule 67 (expp -> PLUS push_operator exp .)
    RSQUARE         reduce using rule 67 (expp -> PLUS push_operator exp .)
    RPAREN          reduce using rule 67 (expp -> PLUS push_operator exp .)
    COMMA           reduce using rule 67 (expp -> PLUS push_operator exp .)


state 182

    (68) expp -> MINUS push_operator exp .

    AND             reduce using rule 68 (expp -> MINUS push_operator exp .)
    OR              reduce using rule 68 (expp -> MINUS push_operator exp .)
    SEMMICOLON      reduce using rule 68 (expp -> MINUS push_operator exp .)
    RSQUARE         reduce using rule 68 (expp -> MINUS push_operator exp .)
    RPAREN          reduce using rule 68 (expp -> MINUS push_operator exp .)
    COMMA           reduce using rule 68 (expp -> MINUS push_operator exp .)


state 183

    (42) id_asignacion_prima -> LSQUARE expression RSQUARE LSQUARE expression . RSQUARE ASSIGN sexp SEMMICOLON

    RSQUARE         shift and go to state 189


state 184

    (41) id_asignacion_prima -> LSQUARE expression RSQUARE ASSIGN sexp . SEMMICOLON

    SEMMICOLON      shift and go to state 190


state 185

    (43) ciclo_for -> FOR LPAREN ID ASSIGN sexp SEMMICOLON . sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY
    (52) sexp -> . cuadruplo_1 sexprima
    (53) cuadruplo_1 -> . expression
    (57) expression -> . exp
    (65) exp -> . cuadruplo_3 expp
    (66) cuadruplo_3 -> . term
    (70) term -> . cuadruplo_4 termp
    (71) cuadruplo_4 -> . factor
    (76) factor -> . cons
    (77) factor -> . LPAREN expression RPAREN
    (78) cons -> . id
    (79) cons -> . NUMINT int_type
    (80) cons -> . NUMFLOAT float_type
    (83) id -> . ID idp

    LPAREN          shift and go to state 111
    NUMINT          shift and go to state 104
    NUMFLOAT        shift and go to state 103
    ID              shift and go to state 70

    term                           shift and go to state 112
    cuadruplo_4                    shift and go to state 105
    cuadruplo_1                    shift and go to state 106
    cuadruplo_3                    shift and go to state 107
    sexp                           shift and go to state 191
    cons                           shift and go to state 102
    exp                            shift and go to state 113
    factor                         shift and go to state 109
    expression                     shift and go to state 114
    id                             shift and go to state 108

state 186

    (47) ciclo_if -> IF LPAREN sexp RPAREN ciclo_if_1 LKEY . estatuto RKEY if_else
    (23) estatuto -> . ciclo_for estatuto
    (24) estatuto -> . ciclo_if estatuto
    (25) estatuto -> . ciclo_while estatuto
    (26) estatuto -> . read_process estatuto
    (27) estatuto -> . print_process estatuto
    (28) estatuto -> . call_process estatuto
    (29) estatuto -> . id_asignacion estatuto
    (30) estatuto -> . empty
    (43) ciclo_for -> . FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY
    (47) ciclo_if -> . IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else
    (44) ciclo_while -> . WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2
    (38) read_process -> . READ LPAREN sexp RPAREN SEMMICOLON
    (32) print_process -> . PRINT LPAREN print_1 RPAREN SEMMICOLON
    (31) call_process -> . CALL ID LPAREN RPAREN SEMMICOLON
    (39) id_asignacion -> . id id_asignacion_prima
    (91) empty -> .
    (83) id -> . ID idp

    FOR             shift and go to state 67
    IF              shift and go to state 71
    WHILE           shift and go to state 59
    READ            shift and go to state 63
    PRINT           shift and go to state 60
    CALL            shift and go to state 64
    RKEY            reduce using rule 91 (empty -> .)
    ID              shift and go to state 70

    ciclo_for                      shift and go to state 56
    read_process                   shift and go to state 57
    ciclo_while                    shift and go to state 58
    estatuto                       shift and go to state 192
    id                             shift and go to state 61
    ciclo_if                       shift and go to state 68
    print_process                  shift and go to state 69
    id_asignacion                  shift and go to state 65
    call_process                   shift and go to state 72
    empty                          shift and go to state 66

state 187

    (44) ciclo_while -> WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto . RKEY ciclo_while_2

    RKEY            shift and go to state 193


state 188

    (35) print_prima_1 -> COMMA print_prima_2 print_1 .

    RPAREN          reduce using rule 35 (print_prima_1 -> COMMA print_prima_2 print_1 .)


state 189

    (42) id_asignacion_prima -> LSQUARE expression RSQUARE LSQUARE expression RSQUARE . ASSIGN sexp SEMMICOLON

    ASSIGN          shift and go to state 194


state 190

    (41) id_asignacion_prima -> LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON .

    FOR             reduce using rule 41 (id_asignacion_prima -> LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON .)
    IF              reduce using rule 41 (id_asignacion_prima -> LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON .)
    WHILE           reduce using rule 41 (id_asignacion_prima -> LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON .)
    READ            reduce using rule 41 (id_asignacion_prima -> LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON .)
    PRINT           reduce using rule 41 (id_asignacion_prima -> LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON .)
    CALL            reduce using rule 41 (id_asignacion_prima -> LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON .)
    ID              reduce using rule 41 (id_asignacion_prima -> LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON .)
    RKEY            reduce using rule 41 (id_asignacion_prima -> LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON .)


state 191

    (43) ciclo_for -> FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp . SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY

    SEMMICOLON      shift and go to state 195


state 192

    (47) ciclo_if -> IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto . RKEY if_else

    RKEY            shift and go to state 196


state 193

    (44) ciclo_while -> WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY . ciclo_while_2
    (46) ciclo_while_2 -> .

    FOR             reduce using rule 46 (ciclo_while_2 -> .)
    IF              reduce using rule 46 (ciclo_while_2 -> .)
    WHILE           reduce using rule 46 (ciclo_while_2 -> .)
    READ            reduce using rule 46 (ciclo_while_2 -> .)
    PRINT           reduce using rule 46 (ciclo_while_2 -> .)
    CALL            reduce using rule 46 (ciclo_while_2 -> .)
    ID              reduce using rule 46 (ciclo_while_2 -> .)
    RKEY            reduce using rule 46 (ciclo_while_2 -> .)

    ciclo_while_2                  shift and go to state 197

state 194

    (42) id_asignacion_prima -> LSQUARE expression RSQUARE LSQUARE expression RSQUARE ASSIGN . sexp SEMMICOLON
    (52) sexp -> . cuadruplo_1 sexprima
    (53) cuadruplo_1 -> . expression
    (57) expression -> . exp
    (65) exp -> . cuadruplo_3 expp
    (66) cuadruplo_3 -> . term
    (70) term -> . cuadruplo_4 termp
    (71) cuadruplo_4 -> . factor
    (76) factor -> . cons
    (77) factor -> . LPAREN expression RPAREN
    (78) cons -> . id
    (79) cons -> . NUMINT int_type
    (80) cons -> . NUMFLOAT float_type
    (83) id -> . ID idp

    LPAREN          shift and go to state 111
    NUMINT          shift and go to state 104
    NUMFLOAT        shift and go to state 103
    ID              shift and go to state 70

    term                           shift and go to state 112
    cons                           shift and go to state 102
    cuadruplo_4                    shift and go to state 105
    cuadruplo_1                    shift and go to state 106
    cuadruplo_3                    shift and go to state 107
    sexp                           shift and go to state 198
    exp                            shift and go to state 113
    factor                         shift and go to state 109
    expression                     shift and go to state 114
    id                             shift and go to state 108

state 195

    (43) ciclo_for -> FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON . ID ASSIGN sexp RPAREN LKEY estatuto RKEY

    ID              shift and go to state 199


state 196

    (47) ciclo_if -> IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY . if_else
    (49) if_else -> . ELSE LKEY if_else_1 estatuto RKEY
    (50) if_else -> . empty
    (91) empty -> .

    ELSE            shift and go to state 200
    FOR             reduce using rule 91 (empty -> .)
    IF              reduce using rule 91 (empty -> .)
    WHILE           reduce using rule 91 (empty -> .)
    READ            reduce using rule 91 (empty -> .)
    PRINT           reduce using rule 91 (empty -> .)
    CALL            reduce using rule 91 (empty -> .)
    ID              reduce using rule 91 (empty -> .)
    RKEY            reduce using rule 91 (empty -> .)

    if_else                        shift and go to state 201
    empty                          shift and go to state 202

state 197

    (44) ciclo_while -> WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2 .

    FOR             reduce using rule 44 (ciclo_while -> WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2 .)
    IF              reduce using rule 44 (ciclo_while -> WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2 .)
    WHILE           reduce using rule 44 (ciclo_while -> WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2 .)
    READ            reduce using rule 44 (ciclo_while -> WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2 .)
    PRINT           reduce using rule 44 (ciclo_while -> WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2 .)
    CALL            reduce using rule 44 (ciclo_while -> WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2 .)
    ID              reduce using rule 44 (ciclo_while -> WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2 .)
    RKEY            reduce using rule 44 (ciclo_while -> WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2 .)


state 198

    (42) id_asignacion_prima -> LSQUARE expression RSQUARE LSQUARE expression RSQUARE ASSIGN sexp . SEMMICOLON

    SEMMICOLON      shift and go to state 203


state 199

    (43) ciclo_for -> FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID . ASSIGN sexp RPAREN LKEY estatuto RKEY

    ASSIGN          shift and go to state 204


state 200

    (49) if_else -> ELSE . LKEY if_else_1 estatuto RKEY

    LKEY            shift and go to state 205


state 201

    (47) ciclo_if -> IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else .

    FOR             reduce using rule 47 (ciclo_if -> IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else .)
    IF              reduce using rule 47 (ciclo_if -> IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else .)
    WHILE           reduce using rule 47 (ciclo_if -> IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else .)
    READ            reduce using rule 47 (ciclo_if -> IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else .)
    PRINT           reduce using rule 47 (ciclo_if -> IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else .)
    CALL            reduce using rule 47 (ciclo_if -> IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else .)
    ID              reduce using rule 47 (ciclo_if -> IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else .)
    RKEY            reduce using rule 47 (ciclo_if -> IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else .)


state 202

    (50) if_else -> empty .

    FOR             reduce using rule 50 (if_else -> empty .)
    IF              reduce using rule 50 (if_else -> empty .)
    WHILE           reduce using rule 50 (if_else -> empty .)
    READ            reduce using rule 50 (if_else -> empty .)
    PRINT           reduce using rule 50 (if_else -> empty .)
    CALL            reduce using rule 50 (if_else -> empty .)
    ID              reduce using rule 50 (if_else -> empty .)
    RKEY            reduce using rule 50 (if_else -> empty .)


state 203

    (42) id_asignacion_prima -> LSQUARE expression RSQUARE LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON .

    FOR             reduce using rule 42 (id_asignacion_prima -> LSQUARE expression RSQUARE LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON .)
    IF              reduce using rule 42 (id_asignacion_prima -> LSQUARE expression RSQUARE LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON .)
    WHILE           reduce using rule 42 (id_asignacion_prima -> LSQUARE expression RSQUARE LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON .)
    READ            reduce using rule 42 (id_asignacion_prima -> LSQUARE expression RSQUARE LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON .)
    PRINT           reduce using rule 42 (id_asignacion_prima -> LSQUARE expression RSQUARE LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON .)
    CALL            reduce using rule 42 (id_asignacion_prima -> LSQUARE expression RSQUARE LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON .)
    ID              reduce using rule 42 (id_asignacion_prima -> LSQUARE expression RSQUARE LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON .)
    RKEY            reduce using rule 42 (id_asignacion_prima -> LSQUARE expression RSQUARE LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON .)


state 204

    (43) ciclo_for -> FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN . sexp RPAREN LKEY estatuto RKEY
    (52) sexp -> . cuadruplo_1 sexprima
    (53) cuadruplo_1 -> . expression
    (57) expression -> . exp
    (65) exp -> . cuadruplo_3 expp
    (66) cuadruplo_3 -> . term
    (70) term -> . cuadruplo_4 termp
    (71) cuadruplo_4 -> . factor
    (76) factor -> . cons
    (77) factor -> . LPAREN expression RPAREN
    (78) cons -> . id
    (79) cons -> . NUMINT int_type
    (80) cons -> . NUMFLOAT float_type
    (83) id -> . ID idp

    LPAREN          shift and go to state 111
    NUMINT          shift and go to state 104
    NUMFLOAT        shift and go to state 103
    ID              shift and go to state 70

    term                           shift and go to state 112
    cuadruplo_4                    shift and go to state 105
    cuadruplo_1                    shift and go to state 106
    cuadruplo_3                    shift and go to state 107
    sexp                           shift and go to state 206
    cons                           shift and go to state 102
    exp                            shift and go to state 113
    factor                         shift and go to state 109
    expression                     shift and go to state 114
    id                             shift and go to state 108

state 205

    (49) if_else -> ELSE LKEY . if_else_1 estatuto RKEY
    (51) if_else_1 -> .

    FOR             reduce using rule 51 (if_else_1 -> .)
    IF              reduce using rule 51 (if_else_1 -> .)
    WHILE           reduce using rule 51 (if_else_1 -> .)
    READ            reduce using rule 51 (if_else_1 -> .)
    PRINT           reduce using rule 51 (if_else_1 -> .)
    CALL            reduce using rule 51 (if_else_1 -> .)
    ID              reduce using rule 51 (if_else_1 -> .)
    RKEY            reduce using rule 51 (if_else_1 -> .)

    if_else_1                      shift and go to state 207

state 206

    (43) ciclo_for -> FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp . RPAREN LKEY estatuto RKEY

    RPAREN          shift and go to state 208


state 207

    (49) if_else -> ELSE LKEY if_else_1 . estatuto RKEY
    (23) estatuto -> . ciclo_for estatuto
    (24) estatuto -> . ciclo_if estatuto
    (25) estatuto -> . ciclo_while estatuto
    (26) estatuto -> . read_process estatuto
    (27) estatuto -> . print_process estatuto
    (28) estatuto -> . call_process estatuto
    (29) estatuto -> . id_asignacion estatuto
    (30) estatuto -> . empty
    (43) ciclo_for -> . FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY
    (47) ciclo_if -> . IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else
    (44) ciclo_while -> . WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2
    (38) read_process -> . READ LPAREN sexp RPAREN SEMMICOLON
    (32) print_process -> . PRINT LPAREN print_1 RPAREN SEMMICOLON
    (31) call_process -> . CALL ID LPAREN RPAREN SEMMICOLON
    (39) id_asignacion -> . id id_asignacion_prima
    (91) empty -> .
    (83) id -> . ID idp

    FOR             shift and go to state 67
    IF              shift and go to state 71
    WHILE           shift and go to state 59
    READ            shift and go to state 63
    PRINT           shift and go to state 60
    CALL            shift and go to state 64
    RKEY            reduce using rule 91 (empty -> .)
    ID              shift and go to state 70

    ciclo_for                      shift and go to state 56
    read_process                   shift and go to state 57
    ciclo_while                    shift and go to state 58
    estatuto                       shift and go to state 209
    id                             shift and go to state 61
    ciclo_if                       shift and go to state 68
    call_process                   shift and go to state 72
    id_asignacion                  shift and go to state 65
    print_process                  shift and go to state 69
    empty                          shift and go to state 66

state 208

    (43) ciclo_for -> FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN . LKEY estatuto RKEY

    LKEY            shift and go to state 210


state 209

    (49) if_else -> ELSE LKEY if_else_1 estatuto . RKEY

    RKEY            shift and go to state 211


state 210

    (43) ciclo_for -> FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY . estatuto RKEY
    (23) estatuto -> . ciclo_for estatuto
    (24) estatuto -> . ciclo_if estatuto
    (25) estatuto -> . ciclo_while estatuto
    (26) estatuto -> . read_process estatuto
    (27) estatuto -> . print_process estatuto
    (28) estatuto -> . call_process estatuto
    (29) estatuto -> . id_asignacion estatuto
    (30) estatuto -> . empty
    (43) ciclo_for -> . FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY
    (47) ciclo_if -> . IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else
    (44) ciclo_while -> . WHILE ciclo_while_1 LPAREN sexp RPAREN LKEY estatuto RKEY ciclo_while_2
    (38) read_process -> . READ LPAREN sexp RPAREN SEMMICOLON
    (32) print_process -> . PRINT LPAREN print_1 RPAREN SEMMICOLON
    (31) call_process -> . CALL ID LPAREN RPAREN SEMMICOLON
    (39) id_asignacion -> . id id_asignacion_prima
    (91) empty -> .
    (83) id -> . ID idp

    FOR             shift and go to state 67
    IF              shift and go to state 71
    WHILE           shift and go to state 59
    READ            shift and go to state 63
    PRINT           shift and go to state 60
    CALL            shift and go to state 64
    RKEY            reduce using rule 91 (empty -> .)
    ID              shift and go to state 70

    ciclo_for                      shift and go to state 56
    read_process                   shift and go to state 57
    ciclo_while                    shift and go to state 58
    estatuto                       shift and go to state 212
    id                             shift and go to state 61
    ciclo_if                       shift and go to state 68
    print_process                  shift and go to state 69
    id_asignacion                  shift and go to state 65
    call_process                   shift and go to state 72
    empty                          shift and go to state 66

state 211

    (49) if_else -> ELSE LKEY if_else_1 estatuto RKEY .

    FOR             reduce using rule 49 (if_else -> ELSE LKEY if_else_1 estatuto RKEY .)
    IF              reduce using rule 49 (if_else -> ELSE LKEY if_else_1 estatuto RKEY .)
    WHILE           reduce using rule 49 (if_else -> ELSE LKEY if_else_1 estatuto RKEY .)
    READ            reduce using rule 49 (if_else -> ELSE LKEY if_else_1 estatuto RKEY .)
    PRINT           reduce using rule 49 (if_else -> ELSE LKEY if_else_1 estatuto RKEY .)
    CALL            reduce using rule 49 (if_else -> ELSE LKEY if_else_1 estatuto RKEY .)
    ID              reduce using rule 49 (if_else -> ELSE LKEY if_else_1 estatuto RKEY .)
    RKEY            reduce using rule 49 (if_else -> ELSE LKEY if_else_1 estatuto RKEY .)


state 212

    (43) ciclo_for -> FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto . RKEY

    RKEY            shift and go to state 213


state 213

    (43) ciclo_for -> FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY .

    FOR             reduce using rule 43 (ciclo_for -> FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY .)
    IF              reduce using rule 43 (ciclo_for -> FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY .)
    WHILE           reduce using rule 43 (ciclo_for -> FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY .)
    READ            reduce using rule 43 (ciclo_for -> FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY .)
    PRINT           reduce using rule 43 (ciclo_for -> FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY .)
    CALL            reduce using rule 43 (ciclo_for -> FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY .)
    ID              reduce using rule 43 (ciclo_for -> FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY .)
    RKEY            reduce using rule 43 (ciclo_for -> FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LSQUARE in state 70 resolved as shift
