
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'NEQ EQ GTEQ LTEQ AND OR ID NUMINT NUMFLOAT CTES SEMMICOLON POINT RPAREN LPAREN RSQUARE LSQUARE RKEY LKEY LT GT PLUS MINUS TIMES DIVISION ASSIGN COMMA FUNCTION ARRINT READ FLOAT ELSE IF FOR INT WHILE PROGRAM CALL PRINT MAINprograma : PROGRAM ID var_declaration function_declaration main_declaration POINTvar_declaration : INT variable_ent_list var_declaration \n\t\t\t\t\t   | FLOAT variable_float_list var_declaration \n\t\t\t\t\t   | ARRINT variable_arrint_list var_declaration\n\t\t\t\t\t   | emptyvariable_ent_list : ID SEMMICOLON \n\t\t\t\t\t \t | ID COMMA variable_ent_list \n\t\t\t\t\t \t | ID ASSIGN NUMINT SEMMICOLON\n\t\t\t\t\t \t | ID ASSIGN NUMINT COMMA variable_ent_listvariable_float_list : ID SEMMICOLON\n\t\t\t\t\t\t   | ID COMMA variable_float_list\n\t\t\t\t\t\t   | ID ASSIGN NUMFLOAT SEMMICOLON \n\t\t\t\t\t\t   | ID ASSIGN NUMFLOAT COMMA variable_float_listvariable_arrint_list : ID LSQUARE ID RSQUARE SEMMICOLON \n\t\t\t\t\t \t \t| ID LSQUARE ID RSQUARE COMMA variable_arrint_list\n\t\t\t\t\t \t \t| ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE SEMMICOLON\n\t\t\t\t\t \t \t| ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE COMMA variable_arrint_listfunction_declaration : function_1\n\t\t\t\t\t\t\t| emptyfunction_1 : FUNCTION ID LPAREN RPAREN LKEY estatuto RKEY function_1\n\t\t\t\t  | FUNCTION ID LPAREN RPAREN LKEY estatuto RKEY main_declaration : MAIN LPAREN RPAREN LKEY estatuto RKEY estatuto : ciclo_for estatuto\n\t\t\t\t| ciclo_if estatuto\n\t\t\t\t| ciclo_while estatuto\n\t\t\t\t| read_process estatuto\n\t\t\t\t| print_process estatuto\n\t\t\t\t| call_process estatuto\n\t\t\t\t| id_asignacion estatuto\n\t\t\t\t| emptycall_process : CALL ID LPAREN RPAREN SEMMICOLONprint_process : PRINT LPAREN print_1 RPAREN SEMMICOLONprint_1 : id print_aux_1 print_prima_1\n\t\t\t   | string_type print_aux_2 print_prima_1print_aux_1 : print_aux_2 : print_prima_1 : COMMA print_prima_2 print_1\n\t\t\t\t\t | empty print_prima_2print_prima_2 : read_process : READ LPAREN sexp RPAREN SEMMICOLONid_asignacion : id id_asignacion_primaid_asignacion_prima : ASSIGN sexp SEMMICOLON\n\t\t\t\t\t\t   | LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON\n\t\t\t\t\t \t   | LSQUARE expression RSQUARE LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLONciclo_for : FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEYciclo_while : WHILE ciclo_while_1 LPAREN sexp RPAREN ciclo_while_2 LKEY estatuto RKEYciclo_while_1 : ciclo_while_2 : ciclo_if : IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_elseciclo_if_1 : if_else : ELSE LKEY if_else_1 estatuto RKEY \n\t\t\t   | emptyif_else_1 : sexp : cuadruplo_1 sexprimacuadruplo_1 : expressionsexprima : AND push_operator sexp\n                | OR push_operator sexp\n                | emptyexpression : cuadruplo_2 expressionpcuadruplo_2 : expexpressionp : LT push_operator expression\n                   | GT push_operator expression\n                   | LTEQ push_operator expression \n                   | GTEQ push_operator expression\n                   | EQ push_operator expression\n                   | NEQ push_operator expression \n                   | emptyexp : cuadruplo_3 exppcuadruplo_3 : termexpp : PLUS push_operator exp\n            | MINUS push_operator exp\n            | emptyterm : cuadruplo_4 termpcuadruplo_4 : factortermp : DIVISION push_operator term \n             | TIMES push_operator term \n             | emptypush_operator : factor : cons\n              | LPAREN push_operator sexp RPAREN pop_parentesis \n              | emptypop_parentesis : cons : id\n\t\t\t| NUMINT int_type\n\t\t\t| NUMFLOAT float_typeint_type : float_type : string_type : CTESid : IDempty :'
    
_lr_action_items = {'LPAREN':([29,31,59,60,63,67,71,78,80,81,84,85,90,95,110,127,129,131,133,136,137,139,140,141,142,143,146,148,153,161,162,163,164,165,166,167,168,169,170,171,172,174,175,198,208,218,],[37,39,-47,79,84,87,90,95,110,110,110,118,110,110,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'GTEQ':([70,80,81,84,90,95,100,101,102,103,105,106,107,108,110,111,112,113,126,127,128,129,130,131,133,135,136,137,138,139,140,141,142,143,146,148,149,153,161,162,163,164,165,166,167,168,169,170,171,172,174,175,183,184,187,188,195,198,202,208,218,],[-89,-90,-90,-90,-90,-90,-79,-87,-83,-90,-90,140,-74,-81,-78,-69,-86,-60,-85,-78,-73,-78,-77,-78,-78,-68,-78,-78,-72,-78,-78,-78,-78,-78,-78,-90,-84,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-75,-76,-70,-71,-82,-90,-80,-90,-90,]),'READ':([52,53,56,57,58,65,68,69,72,82,147,159,176,177,199,200,204,210,211,215,216,217,219,221,224,225,227,],[63,63,63,63,63,63,63,63,63,-41,-42,-32,-40,-31,63,63,-43,-90,-46,-49,-52,-44,-53,63,63,-51,-45,]),'SEMMICOLON':([12,14,33,36,40,70,74,80,100,101,102,103,104,105,106,107,108,109,111,112,113,114,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,152,153,161,162,163,164,165,166,167,168,169,170,171,172,175,178,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,202,205,208,212,],[23,26,41,43,47,-89,93,-90,-79,-87,-83,-90,-90,-90,-90,-74,-81,147,-69,-86,-60,-55,159,-85,-78,-73,-78,-77,-78,-54,-78,-58,-68,-78,-78,-72,-78,-78,-78,-78,-78,-59,-67,-78,-84,176,177,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,198,-75,-76,-56,-57,-70,-71,-62,-64,-65,-63,-61,-66,-82,204,-90,-80,209,-90,217,]),'WHILE':([52,53,56,57,58,65,68,69,72,82,147,159,176,177,199,200,204,210,211,215,216,217,219,221,224,225,227,],[59,59,59,59,59,59,59,59,59,-41,-42,-32,-40,-31,59,59,-43,-90,-46,-49,-52,-44,-53,59,59,-51,-45,]),'PROGRAM':([0,],[1,]),'NUMFLOAT':([28,80,81,84,90,95,110,127,129,131,133,136,137,139,140,141,142,143,146,148,153,161,162,163,164,165,166,167,168,169,170,171,172,174,175,198,208,218,],[36,101,101,101,101,101,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'PRINT':([52,53,56,57,58,65,68,69,72,82,147,159,176,177,199,200,204,210,211,215,216,217,219,221,224,225,227,],[60,60,60,60,60,60,60,60,60,-41,-42,-32,-40,-31,60,60,-43,-90,-46,-49,-52,-44,-53,60,60,-51,-45,]),'NUMINT':([22,80,81,84,90,95,110,127,129,131,133,136,137,139,140,141,142,143,146,148,153,161,162,163,164,165,166,167,168,169,170,171,172,174,175,198,208,218,],[33,112,112,112,112,112,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'NEQ':([70,80,81,84,90,95,100,101,102,103,105,106,107,108,110,111,112,113,126,127,128,129,130,131,133,135,136,137,138,139,140,141,142,143,146,148,149,153,161,162,163,164,165,166,167,168,169,170,171,172,174,175,183,184,187,188,195,198,202,208,218,],[-89,-90,-90,-90,-90,-90,-79,-87,-83,-90,-90,146,-74,-81,-78,-69,-86,-60,-85,-78,-73,-78,-77,-78,-78,-68,-78,-78,-72,-78,-78,-78,-78,-78,-78,-90,-84,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-75,-76,-70,-71,-82,-90,-80,-90,-90,]),'RSQUARE':([32,55,70,81,100,101,102,103,105,106,107,108,111,112,113,115,126,127,128,129,130,135,136,137,138,139,140,141,142,143,144,145,146,149,161,162,165,166,167,168,169,170,171,172,174,183,184,187,188,189,190,191,192,193,194,195,196,202,],[40,74,-89,-90,-79,-87,-83,-90,-90,-90,-74,-81,-69,-86,-60,150,-85,-78,-73,-78,-77,-68,-78,-78,-72,-78,-78,-78,-78,-78,-59,-67,-78,-84,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-75,-76,-70,-71,-62,-64,-65,-63,-61,-66,-82,203,-80,]),'RPAREN':([37,39,70,84,90,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,117,118,120,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,156,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,182,183,184,185,186,187,188,189,190,191,192,193,194,195,201,202,218,220,],[45,46,-89,-90,-90,-90,-88,-36,124,-35,-79,-87,-83,-90,-90,-90,-90,-74,-81,-78,-69,-86,-60,-55,151,152,154,155,-90,-90,-85,-78,-73,-78,-77,-78,-54,-78,-58,-68,-78,-78,-72,-78,-78,-78,-78,-78,-59,-67,-78,-90,-84,-34,-39,-33,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,195,-38,-75,-76,-56,-57,-70,-71,-62,-64,-65,-63,-61,-66,-82,-37,-80,-90,222,]),'POINT':([30,92,],[38,-22,]),'MINUS':([70,80,81,84,90,95,100,101,102,103,105,107,108,110,111,112,126,127,128,129,130,131,133,136,137,139,140,141,142,143,146,148,149,153,161,162,163,164,165,166,167,168,169,170,171,172,174,175,183,184,195,198,202,208,218,],[-89,-90,-90,-90,-90,-90,-79,-87,-83,-90,137,-74,-81,-78,-69,-86,-85,-78,-73,-78,-77,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-90,-84,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-75,-76,-82,-90,-80,-90,-90,]),'LT':([70,80,81,84,90,95,100,101,102,103,105,106,107,108,110,111,112,113,126,127,128,129,130,131,133,135,136,137,138,139,140,141,142,143,146,148,149,153,161,162,163,164,165,166,167,168,169,170,171,172,174,175,183,184,187,188,195,198,202,208,218,],[-89,-90,-90,-90,-90,-90,-79,-87,-83,-90,-90,143,-74,-81,-78,-69,-86,-60,-85,-78,-73,-78,-77,-78,-78,-68,-78,-78,-72,-78,-78,-78,-78,-78,-78,-90,-84,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-75,-76,-70,-71,-82,-90,-80,-90,-90,]),'COMMA':([12,14,33,36,40,70,74,96,97,99,123,125,],[24,27,42,44,48,-89,94,-88,-36,-35,157,157,]),'PLUS':([70,80,81,84,90,95,100,101,102,103,105,107,108,110,111,112,126,127,128,129,130,131,133,136,137,139,140,141,142,143,146,148,149,153,161,162,163,164,165,166,167,168,169,170,171,172,174,175,183,184,195,198,202,208,218,],[-89,-90,-90,-90,-90,-90,-79,-87,-83,-90,136,-74,-81,-78,-69,-86,-85,-78,-73,-78,-77,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-90,-84,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-75,-76,-82,-90,-80,-90,-90,]),'ASSIGN':([12,14,61,70,119,150,203,213,],[22,28,80,-89,153,175,208,218,]),'$end':([2,38,],[0,-1,]),'FUNCTION':([3,7,8,9,11,13,19,21,23,25,26,34,35,41,43,47,50,51,54,83,93,121,],[-90,15,-5,-90,-90,-90,-4,-2,-6,-3,-10,-7,-11,-8,-12,-14,-9,-13,-15,15,-16,-17,]),'DIVISION':([70,80,81,84,90,95,100,101,102,103,107,108,110,112,126,127,129,131,133,136,137,139,140,141,142,143,146,148,149,153,161,162,163,164,165,166,167,168,169,170,171,172,174,175,195,198,202,208,218,],[-89,-90,-90,-90,-90,-90,-79,-87,-83,127,-74,-81,-78,-86,-85,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-90,-84,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-82,-90,-80,-90,-90,]),'ARRINT':([3,9,11,13,23,26,34,35,41,43,47,50,51,54,93,121,],[4,4,4,4,-6,-10,-7,-11,-8,-12,-14,-9,-13,-15,-16,-17,]),'GT':([70,80,81,84,90,95,100,101,102,103,105,106,107,108,110,111,112,113,126,127,128,129,130,131,133,135,136,137,138,139,140,141,142,143,146,148,149,153,161,162,163,164,165,166,167,168,169,170,171,172,174,175,183,184,187,188,195,198,202,208,218,],[-89,-90,-90,-90,-90,-90,-79,-87,-83,-90,-90,139,-74,-81,-78,-69,-86,-60,-85,-78,-73,-78,-77,-78,-78,-68,-78,-78,-72,-78,-78,-78,-78,-78,-78,-90,-84,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-75,-76,-70,-71,-82,-90,-80,-90,-90,]),'LKEY':([45,46,154,155,179,180,214,222,],[52,53,-50,-48,199,200,219,224,]),'FOR':([52,53,56,57,58,65,68,69,72,82,147,159,176,177,199,200,204,210,211,215,216,217,219,221,224,225,227,],[67,67,67,67,67,67,67,67,67,-41,-42,-32,-40,-31,67,67,-43,-90,-46,-49,-52,-44,-53,67,67,-51,-45,]),'RKEY':([52,53,56,57,58,62,65,66,68,69,72,73,75,76,77,82,86,88,89,91,147,159,176,177,199,200,204,206,207,210,211,215,216,217,219,221,223,224,225,226,227,],[-90,-90,-90,-90,-90,83,-90,-30,-90,-90,-90,92,-23,-26,-25,-41,-29,-24,-27,-28,-42,-32,-40,-31,-90,-90,-43,210,211,-90,-46,-49,-52,-44,-53,-90,225,-90,-51,227,-45,]),'TIMES':([70,80,81,84,90,95,100,101,102,103,107,108,110,112,126,127,129,131,133,136,137,139,140,141,142,143,146,148,149,153,161,162,163,164,165,166,167,168,169,170,171,172,174,175,195,198,202,208,218,],[-89,-90,-90,-90,-90,-90,-79,-87,-83,129,-74,-81,-78,-86,-85,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-90,-84,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-82,-90,-80,-90,-90,]),'LSQUARE':([10,40,61,70,150,],[20,49,81,-89,174,]),'ELSE':([210,],[214,]),'EQ':([70,80,81,84,90,95,100,101,102,103,105,106,107,108,110,111,112,113,126,127,128,129,130,131,133,135,136,137,138,139,140,141,142,143,146,148,149,153,161,162,163,164,165,166,167,168,169,170,171,172,174,175,183,184,187,188,195,198,202,208,218,],[-89,-90,-90,-90,-90,-90,-79,-87,-83,-90,-90,141,-74,-81,-78,-69,-86,-60,-85,-78,-73,-78,-77,-78,-78,-68,-78,-78,-72,-78,-78,-78,-78,-78,-78,-90,-84,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-75,-76,-70,-71,-82,-90,-80,-90,-90,]),'ID':([1,4,5,6,15,20,24,27,42,44,48,49,52,53,56,57,58,64,65,68,69,72,79,80,81,82,84,87,90,94,95,110,127,129,131,133,136,137,139,140,141,142,143,146,147,148,153,157,159,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,181,198,199,200,204,208,209,210,211,215,216,217,218,219,221,224,225,227,],[3,10,12,14,29,32,12,14,12,14,10,55,70,70,70,70,70,85,70,70,70,70,70,70,70,-41,70,119,70,10,70,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-78,-42,70,70,-39,-32,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-40,-31,70,70,70,70,-43,70,213,-90,-46,-49,-52,-44,70,-53,70,70,-51,-45,]),'IF':([52,53,56,57,58,65,68,69,72,82,147,159,176,177,199,200,204,210,211,215,216,217,219,221,224,225,227,],[71,71,71,71,71,71,71,71,71,-41,-42,-32,-40,-31,71,71,-43,-90,-46,-49,-52,-44,-53,71,71,-51,-45,]),'AND':([70,80,84,90,95,100,101,102,103,104,105,106,107,108,110,111,112,113,114,126,127,128,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,148,149,153,161,162,163,164,165,166,167,168,169,170,171,172,175,183,184,187,188,189,190,191,192,193,194,195,198,202,208,218,],[-89,-90,-90,-90,-90,-79,-87,-83,-90,131,-90,-90,-74,-81,-78,-69,-86,-60,-55,-85,-78,-73,-78,-77,-78,-78,-68,-78,-78,-72,-78,-78,-78,-78,-78,-59,-67,-78,-90,-84,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-75,-76,-70,-71,-62,-64,-65,-63,-61,-66,-82,-90,-80,-90,-90,]),'CTES':([79,157,181,],[96,-39,96,]),'INT':([3,9,11,13,23,26,34,35,41,43,47,50,51,54,93,121,],[5,5,5,5,-6,-10,-7,-11,-8,-12,-14,-9,-13,-15,-16,-17,]),'LTEQ':([70,80,81,84,90,95,100,101,102,103,105,106,107,108,110,111,112,113,126,127,128,129,130,131,133,135,136,137,138,139,140,141,142,143,146,148,149,153,161,162,163,164,165,166,167,168,169,170,171,172,174,175,183,184,187,188,195,198,202,208,218,],[-89,-90,-90,-90,-90,-90,-79,-87,-83,-90,-90,142,-74,-81,-78,-69,-86,-60,-85,-78,-73,-78,-77,-78,-78,-68,-78,-78,-72,-78,-78,-78,-78,-78,-78,-90,-84,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-75,-76,-70,-71,-82,-90,-80,-90,-90,]),'FLOAT':([3,9,11,13,23,26,34,35,41,43,47,50,51,54,93,121,],[6,6,6,6,-6,-10,-7,-11,-8,-12,-14,-9,-13,-15,-16,-17,]),'CALL':([52,53,56,57,58,65,68,69,72,82,147,159,176,177,199,200,204,210,211,215,216,217,219,221,224,225,227,],[64,64,64,64,64,64,64,64,64,-41,-42,-32,-40,-31,64,64,-43,-90,-46,-49,-52,-44,-53,64,64,-51,-45,]),'MAIN':([3,7,8,9,11,13,16,17,18,19,21,23,25,26,34,35,41,43,47,50,51,54,83,93,116,121,],[-90,-90,-5,-90,-90,-90,31,-18,-19,-4,-2,-6,-3,-10,-7,-11,-8,-12,-14,-9,-13,-15,-21,-16,-20,-17,]),'OR':([70,80,84,90,95,100,101,102,103,104,105,106,107,108,110,111,112,113,114,126,127,128,129,130,131,133,135,136,137,138,139,140,141,142,143,144,145,146,148,149,153,161,162,163,164,165,166,167,168,169,170,171,172,175,183,184,187,188,189,190,191,192,193,194,195,198,202,208,218,],[-89,-90,-90,-90,-90,-79,-87,-83,-90,133,-90,-90,-74,-81,-78,-69,-86,-60,-55,-85,-78,-73,-78,-77,-78,-78,-68,-78,-78,-72,-78,-78,-78,-78,-78,-59,-67,-78,-90,-84,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-75,-76,-70,-71,-62,-64,-65,-63,-61,-66,-82,-90,-80,-90,-90,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ciclo_for':([52,53,56,57,58,65,68,69,72,199,200,221,224,],[56,56,56,56,56,56,56,56,56,56,56,56,56,]),'cons':([80,81,84,90,95,148,153,161,162,163,164,165,166,167,168,169,170,171,172,174,175,198,208,218,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'read_process':([52,53,56,57,58,65,68,69,72,199,200,221,224,],[57,57,57,57,57,57,57,57,57,57,57,57,57,]),'ciclo_if_1':([154,],[179,]),'ciclo_while':([52,53,56,57,58,65,68,69,72,199,200,221,224,],[58,58,58,58,58,58,58,58,58,58,58,58,58,]),'string_type':([79,181,],[97,97,]),'push_operator':([110,127,129,131,133,136,137,139,140,141,142,143,146,],[148,161,162,163,164,165,166,167,168,169,170,171,172,]),'expressionp':([106,],[144,]),'id_asignacion_prima':([61,],[82,]),'id':([52,53,56,57,58,65,68,69,72,79,80,81,84,90,95,148,153,161,162,163,164,165,166,167,168,169,170,171,172,174,175,181,198,199,200,208,218,221,224,],[61,61,61,61,61,61,61,61,61,99,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,99,102,61,61,102,102,61,61,]),'variable_float_list':([6,27,44,],[13,35,51,]),'float_type':([101,],[126,]),'cuadruplo_4':([80,81,84,90,95,148,153,161,162,163,164,165,166,167,168,169,170,171,172,174,175,198,208,218,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'estatuto':([52,53,56,57,58,65,68,69,72,199,200,221,224,],[62,73,75,76,77,86,88,89,91,206,207,223,226,]),'cuadruplo_1':([80,84,90,95,148,153,163,164,175,198,208,218,],[104,104,104,104,104,104,104,104,104,104,104,104,]),'cuadruplo_3':([80,81,84,90,95,148,153,163,164,165,166,167,168,169,170,171,172,174,175,198,208,218,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'cuadruplo_2':([80,81,84,90,95,148,153,163,164,167,168,169,170,171,172,174,175,198,208,218,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'var_declaration':([3,9,11,13,],[7,19,21,25,]),'variable_ent_list':([5,24,42,],[11,34,50,]),'int_type':([112,],[149,]),'factor':([80,81,84,90,95,148,153,161,162,163,164,165,166,167,168,169,170,171,172,174,175,198,208,218,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'if_else_1':([219,],[221,]),'id_asignacion':([52,53,56,57,58,65,68,69,72,199,200,221,224,],[65,65,65,65,65,65,65,65,65,65,65,65,65,]),'empty':([3,7,9,11,13,52,53,56,57,58,65,68,69,72,80,81,84,90,95,103,104,105,106,123,125,148,153,161,162,163,164,165,166,167,168,169,170,171,172,174,175,198,199,200,208,210,218,221,224,],[8,18,8,8,8,66,66,66,66,66,66,66,66,66,108,108,108,108,108,130,134,138,145,158,158,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,66,66,108,216,108,66,66,]),'print_prima_1':([123,125,],[156,160,]),'print_prima_2':([157,158,],[181,182,]),'if_else':([210,],[215,]),'sexprima':([104,],[132,]),'termp':([103,],[128,]),'print_1':([79,181,],[98,201,]),'main_declaration':([16,],[30,]),'ciclo_if':([52,53,56,57,58,65,68,69,72,199,200,221,224,],[68,68,68,68,68,68,68,68,68,68,68,68,68,]),'print_process':([52,53,56,57,58,65,68,69,72,199,200,221,224,],[69,69,69,69,69,69,69,69,69,69,69,69,69,]),'sexp':([80,84,90,95,148,153,163,164,175,198,208,218,],[109,117,120,122,173,178,185,186,197,205,212,220,]),'term':([80,81,84,90,95,148,153,161,162,163,164,165,166,167,168,169,170,171,172,174,175,198,208,218,],[111,111,111,111,111,111,111,183,184,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'function_declaration':([7,],[16,]),'variable_arrint_list':([4,48,94,],[9,54,121,]),'expp':([105,],[135,]),'pop_parentesis':([195,],[202,]),'function_1':([7,83,],[17,116,]),'print_aux_1':([99,],[125,]),'print_aux_2':([97,],[123,]),'ciclo_while_2':([155,],[180,]),'programa':([0,],[2,]),'exp':([80,81,84,90,95,148,153,163,164,165,166,167,168,169,170,171,172,174,175,198,208,218,],[113,113,113,113,113,113,113,113,113,187,188,113,113,113,113,113,113,113,113,113,113,113,]),'ciclo_while_1':([59,],[78,]),'call_process':([52,53,56,57,58,65,68,69,72,199,200,221,224,],[72,72,72,72,72,72,72,72,72,72,72,72,72,]),'expression':([80,81,84,90,95,148,153,163,164,167,168,169,170,171,172,174,175,198,208,218,],[114,115,114,114,114,114,114,114,114,189,190,191,192,193,194,196,114,114,114,114,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID var_declaration function_declaration main_declaration POINT','programa',6,'p_programa','yacc.py',33),
  ('var_declaration -> INT variable_ent_list var_declaration','var_declaration',3,'p_var_declaration','yacc.py',409),
  ('var_declaration -> FLOAT variable_float_list var_declaration','var_declaration',3,'p_var_declaration','yacc.py',410),
  ('var_declaration -> ARRINT variable_arrint_list var_declaration','var_declaration',3,'p_var_declaration','yacc.py',411),
  ('var_declaration -> empty','var_declaration',1,'p_var_declaration','yacc.py',412),
  ('variable_ent_list -> ID SEMMICOLON','variable_ent_list',2,'p_variable_ent_list','yacc.py',415),
  ('variable_ent_list -> ID COMMA variable_ent_list','variable_ent_list',3,'p_variable_ent_list','yacc.py',416),
  ('variable_ent_list -> ID ASSIGN NUMINT SEMMICOLON','variable_ent_list',4,'p_variable_ent_list','yacc.py',417),
  ('variable_ent_list -> ID ASSIGN NUMINT COMMA variable_ent_list','variable_ent_list',5,'p_variable_ent_list','yacc.py',418),
  ('variable_float_list -> ID SEMMICOLON','variable_float_list',2,'p_variable_float_list','yacc.py',425),
  ('variable_float_list -> ID COMMA variable_float_list','variable_float_list',3,'p_variable_float_list','yacc.py',426),
  ('variable_float_list -> ID ASSIGN NUMFLOAT SEMMICOLON','variable_float_list',4,'p_variable_float_list','yacc.py',427),
  ('variable_float_list -> ID ASSIGN NUMFLOAT COMMA variable_float_list','variable_float_list',5,'p_variable_float_list','yacc.py',428),
  ('variable_arrint_list -> ID LSQUARE ID RSQUARE SEMMICOLON','variable_arrint_list',5,'p_variable_arrint_list','yacc.py',435),
  ('variable_arrint_list -> ID LSQUARE ID RSQUARE COMMA variable_arrint_list','variable_arrint_list',6,'p_variable_arrint_list','yacc.py',436),
  ('variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE SEMMICOLON','variable_arrint_list',8,'p_variable_arrint_list','yacc.py',437),
  ('variable_arrint_list -> ID LSQUARE ID RSQUARE LSQUARE ID RSQUARE COMMA variable_arrint_list','variable_arrint_list',9,'p_variable_arrint_list','yacc.py',438),
  ('function_declaration -> function_1','function_declaration',1,'p_function_declaration','yacc.py',444),
  ('function_declaration -> empty','function_declaration',1,'p_function_declaration','yacc.py',445),
  ('function_1 -> FUNCTION ID LPAREN RPAREN LKEY estatuto RKEY function_1','function_1',8,'p_function_1','yacc.py',448),
  ('function_1 -> FUNCTION ID LPAREN RPAREN LKEY estatuto RKEY','function_1',7,'p_function_1','yacc.py',449),
  ('main_declaration -> MAIN LPAREN RPAREN LKEY estatuto RKEY','main_declaration',6,'p_main_declaration','yacc.py',452),
  ('estatuto -> ciclo_for estatuto','estatuto',2,'p_estatuto','yacc.py',456),
  ('estatuto -> ciclo_if estatuto','estatuto',2,'p_estatuto','yacc.py',457),
  ('estatuto -> ciclo_while estatuto','estatuto',2,'p_estatuto','yacc.py',458),
  ('estatuto -> read_process estatuto','estatuto',2,'p_estatuto','yacc.py',459),
  ('estatuto -> print_process estatuto','estatuto',2,'p_estatuto','yacc.py',460),
  ('estatuto -> call_process estatuto','estatuto',2,'p_estatuto','yacc.py',461),
  ('estatuto -> id_asignacion estatuto','estatuto',2,'p_estatuto','yacc.py',462),
  ('estatuto -> empty','estatuto',1,'p_estatuto','yacc.py',463),
  ('call_process -> CALL ID LPAREN RPAREN SEMMICOLON','call_process',5,'p_call_process','yacc.py',466),
  ('print_process -> PRINT LPAREN print_1 RPAREN SEMMICOLON','print_process',5,'p_print_process','yacc.py',469),
  ('print_1 -> id print_aux_1 print_prima_1','print_1',3,'p_print_1','yacc.py',472),
  ('print_1 -> string_type print_aux_2 print_prima_1','print_1',3,'p_print_1','yacc.py',473),
  ('print_aux_1 -> <empty>','print_aux_1',0,'p_print_aux_1','yacc.py',476),
  ('print_aux_2 -> <empty>','print_aux_2',0,'p_print_aux_2','yacc.py',481),
  ('print_prima_1 -> COMMA print_prima_2 print_1','print_prima_1',3,'p_print_prima_1','yacc.py',486),
  ('print_prima_1 -> empty print_prima_2','print_prima_1',2,'p_print_prima_1','yacc.py',487),
  ('print_prima_2 -> <empty>','print_prima_2',0,'p_print_prima_2','yacc.py',490),
  ('read_process -> READ LPAREN sexp RPAREN SEMMICOLON','read_process',5,'p_read_process','yacc.py',501),
  ('id_asignacion -> id id_asignacion_prima','id_asignacion',2,'p_id_asignacion','yacc.py',506),
  ('id_asignacion_prima -> ASSIGN sexp SEMMICOLON','id_asignacion_prima',3,'p_id_asignacion_prima','yacc.py',509),
  ('id_asignacion_prima -> LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON','id_asignacion_prima',6,'p_id_asignacion_prima','yacc.py',510),
  ('id_asignacion_prima -> LSQUARE expression RSQUARE LSQUARE expression RSQUARE ASSIGN sexp SEMMICOLON','id_asignacion_prima',9,'p_id_asignacion_prima','yacc.py',511),
  ('ciclo_for -> FOR LPAREN ID ASSIGN sexp SEMMICOLON sexp SEMMICOLON ID ASSIGN sexp RPAREN LKEY estatuto RKEY','ciclo_for',15,'p_ciclo_for','yacc.py',518),
  ('ciclo_while -> WHILE ciclo_while_1 LPAREN sexp RPAREN ciclo_while_2 LKEY estatuto RKEY','ciclo_while',9,'p_ciclo_while','yacc.py',522),
  ('ciclo_while_1 -> <empty>','ciclo_while_1',0,'p_ciclo_while_1','yacc.py',534),
  ('ciclo_while_2 -> <empty>','ciclo_while_2',0,'p_ciclo_while_2','yacc.py',539),
  ('ciclo_if -> IF LPAREN sexp RPAREN ciclo_if_1 LKEY estatuto RKEY if_else','ciclo_if',9,'p_ciclo_if','yacc.py',553),
  ('ciclo_if_1 -> <empty>','ciclo_if_1',0,'p_ciclo_if_1','yacc.py',556),
  ('if_else -> ELSE LKEY if_else_1 estatuto RKEY','if_else',5,'p_if_else','yacc.py',571),
  ('if_else -> empty','if_else',1,'p_if_else','yacc.py',572),
  ('if_else_1 -> <empty>','if_else_1',0,'p_if_else_1','yacc.py',581),
  ('sexp -> cuadruplo_1 sexprima','sexp',2,'p_sexp','yacc.py',591),
  ('cuadruplo_1 -> expression','cuadruplo_1',1,'p_cuadruplo_1','yacc.py',594),
  ('sexprima -> AND push_operator sexp','sexprima',3,'p_sexprima','yacc.py',636),
  ('sexprima -> OR push_operator sexp','sexprima',3,'p_sexprima','yacc.py',637),
  ('sexprima -> empty','sexprima',1,'p_sexprima','yacc.py',638),
  ('expression -> cuadruplo_2 expressionp','expression',2,'p_expression','yacc.py',641),
  ('cuadruplo_2 -> exp','cuadruplo_2',1,'p_cuadruplo_2','yacc.py',644),
  ('expressionp -> LT push_operator expression','expressionp',3,'p_expressionp','yacc.py',686),
  ('expressionp -> GT push_operator expression','expressionp',3,'p_expressionp','yacc.py',687),
  ('expressionp -> LTEQ push_operator expression','expressionp',3,'p_expressionp','yacc.py',688),
  ('expressionp -> GTEQ push_operator expression','expressionp',3,'p_expressionp','yacc.py',689),
  ('expressionp -> EQ push_operator expression','expressionp',3,'p_expressionp','yacc.py',690),
  ('expressionp -> NEQ push_operator expression','expressionp',3,'p_expressionp','yacc.py',691),
  ('expressionp -> empty','expressionp',1,'p_expressionp','yacc.py',692),
  ('exp -> cuadruplo_3 expp','exp',2,'p_exp','yacc.py',695),
  ('cuadruplo_3 -> term','cuadruplo_3',1,'p_cuadruplo_3','yacc.py',698),
  ('expp -> PLUS push_operator exp','expp',3,'p_expp','yacc.py',741),
  ('expp -> MINUS push_operator exp','expp',3,'p_expp','yacc.py',742),
  ('expp -> empty','expp',1,'p_expp','yacc.py',743),
  ('term -> cuadruplo_4 termp','term',2,'p_term','yacc.py',746),
  ('cuadruplo_4 -> factor','cuadruplo_4',1,'p_cuadruplo_4','yacc.py',749),
  ('termp -> DIVISION push_operator term','termp',3,'p_termp','yacc.py',791),
  ('termp -> TIMES push_operator term','termp',3,'p_termp','yacc.py',792),
  ('termp -> empty','termp',1,'p_termp','yacc.py',793),
  ('push_operator -> <empty>','push_operator',0,'p_push_operator','yacc.py',796),
  ('factor -> cons','factor',1,'p_factor','yacc.py',802),
  ('factor -> LPAREN push_operator sexp RPAREN pop_parentesis','factor',5,'p_factor','yacc.py',803),
  ('factor -> empty','factor',1,'p_factor','yacc.py',804),
  ('pop_parentesis -> <empty>','pop_parentesis',0,'p_pop_parentesis','yacc.py',807),
  ('cons -> id','cons',1,'p_cons','yacc.py',812),
  ('cons -> NUMINT int_type','cons',2,'p_cons','yacc.py',813),
  ('cons -> NUMFLOAT float_type','cons',2,'p_cons','yacc.py',814),
  ('int_type -> <empty>','int_type',0,'p_int_type','yacc.py',817),
  ('float_type -> <empty>','float_type',0,'p_float_type','yacc.py',823),
  ('string_type -> CTES','string_type',1,'p_string_type','yacc.py',828),
  ('id -> ID','id',1,'p_id','yacc.py',833),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',839),
]
